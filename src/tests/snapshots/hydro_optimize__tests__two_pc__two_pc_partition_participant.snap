---
source: hydro_optimize/src/tests/two_pc.rs
expression: "&ir"
---
[
    CycleSink {
        ident: Ident {
            sym: cycle_1,
        },
        input: AntiJoin {
            pos: Tee {
                inner: <tee>: Chain {
                    first: DeferTick {
                        input: CycleSource {
                            ident: Ident {
                                sym: cycle_1,
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    2,
                                    Process(
                                        0,
                                    ),
                                ),
                                output_type: Some(
                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                2,
                                Process(
                                    0,
                                ),
                            ),
                            output_type: Some(
                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                            ),
                        },
                    },
                    second: Tee {
                        inner: <tee>: Map {
                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                            input: Map {
                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                input: Map {
                                    f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                    input: Network {
                                        serialize_fn: Some(
                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                        ),
                                        instantiate_fn: <network instantiate>,
                                        deserialize_fn: Some(
                                            | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                        ),
                                        input: Network {
                                            serialize_fn: Some(
                                                :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                            ),
                                            instantiate_fn: <network instantiate>,
                                            deserialize_fn: Some(
                                                | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                            ),
                                            input: Map {
                                                f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                input: CrossProduct {
                                                    left: Map {
                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                        input: FilterMap {
                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                            input: FoldKeyed {
                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                input: Persist {
                                                                    inner: Map {
                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                        input: Source {
                                                                            source: Iter(
                                                                                { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                            ),
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Process(
                                                                                    0,
                                                                                ),
                                                                                output_type: Some(
                                                                                    & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                ),
                                                                            },
                                                                        },
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Process(
                                                                                0,
                                                                            ),
                                                                            output_type: Some(
                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                            ),
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Process(
                                                                            0,
                                                                        ),
                                                                        output_type: Some(
                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                        ),
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Process(
                                                                        0,
                                                                    ),
                                                                    output_type: Some(
                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                    ),
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Process(
                                                                    0,
                                                                ),
                                                                output_type: Some(
                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                ),
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Tick(
                                                                1,
                                                                Process(
                                                                    0,
                                                                ),
                                                            ),
                                                            output_type: Some(
                                                                hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                            ),
                                                        },
                                                    },
                                                    right: Network {
                                                        serialize_fn: Some(
                                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                        ),
                                                        instantiate_fn: <network instantiate>,
                                                        deserialize_fn: Some(
                                                            | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& b) . unwrap ()) },
                                                        ),
                                                        input: CycleSource {
                                                            ident: Ident {
                                                                sym: cycle_0,
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Cluster(
                                                                    2,
                                                                ),
                                                                output_type: Some(
                                                                    (u32 , u32),
                                                                ),
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Process(
                                                                0,
                                                            ),
                                                            output_type: Some(
                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                            ),
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Tick(
                                                            1,
                                                            Process(
                                                                0,
                                                            ),
                                                        ),
                                                        output_type: Some(
                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                        ),
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Tick(
                                                        1,
                                                        Process(
                                                            0,
                                                        ),
                                                    ),
                                                    output_type: Some(
                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                    ),
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Cluster(
                                                    1,
                                                ),
                                                output_type: Some(
                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                ),
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Process(
                                                0,
                                            ),
                                            output_type: Some(
                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                            ),
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Process(
                                            0,
                                        ),
                                        output_type: Some(
                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                        ),
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Process(
                                        0,
                                    ),
                                    output_type: Some(
                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                    ),
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Process(
                                    0,
                                ),
                                output_type: Some(
                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                2,
                                Process(
                                    0,
                                ),
                            ),
                            output_type: Some(
                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                            ),
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            2,
                            Process(
                                0,
                            ),
                        ),
                        output_type: Some(
                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                        ),
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        2,
                        Process(
                            0,
                        ),
                    ),
                    output_type: Some(
                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                    ),
                },
            },
            neg: Tee {
                inner: <tee>: FilterMap {
                    f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                    input: Tee {
                        inner: <tee>: FoldKeyed {
                            init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                            input: Tee {
                                inner: <tee>: Chain {
                                    first: DeferTick {
                                        input: CycleSource {
                                            ident: Ident {
                                                sym: cycle_1,
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Tick(
                                                    2,
                                                    Process(
                                                        0,
                                                    ),
                                                ),
                                                output_type: Some(
                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                ),
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Tick(
                                                2,
                                                Process(
                                                    0,
                                                ),
                                            ),
                                            output_type: Some(
                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                            ),
                                        },
                                    },
                                    second: Tee {
                                        inner: <tee>: Map {
                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                            input: Map {
                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                input: Map {
                                                    f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                    input: Network {
                                                        serialize_fn: Some(
                                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                        ),
                                                        instantiate_fn: <network instantiate>,
                                                        deserialize_fn: Some(
                                                            | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                        ),
                                                        input: Network {
                                                            serialize_fn: Some(
                                                                :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                            ),
                                                            instantiate_fn: <network instantiate>,
                                                            deserialize_fn: Some(
                                                                | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                            ),
                                                            input: Map {
                                                                f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                input: CrossProduct {
                                                                    left: Map {
                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                        input: FilterMap {
                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                            input: FoldKeyed {
                                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                input: Persist {
                                                                                    inner: Map {
                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                        input: Source {
                                                                                            source: Iter(
                                                                                                { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                            ),
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Process(
                                                                                                    0,
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        metadata: HydroIrMetadata {
                                                                                            location_kind: Process(
                                                                                                0,
                                                                                            ),
                                                                                            output_type: Some(
                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Process(
                                                                                            0,
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Process(
                                                                                        0,
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                    ),
                                                                                },
                                                                            },
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Process(
                                                                                    0,
                                                                                ),
                                                                                output_type: Some(
                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                ),
                                                                            },
                                                                        },
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Tick(
                                                                                1,
                                                                                Process(
                                                                                    0,
                                                                                ),
                                                                            ),
                                                                            output_type: Some(
                                                                                hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                            ),
                                                                        },
                                                                    },
                                                                    right: Network {
                                                                        serialize_fn: Some(
                                                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                        ),
                                                                        instantiate_fn: <network instantiate>,
                                                                        deserialize_fn: Some(
                                                                            | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& b) . unwrap ()) },
                                                                        ),
                                                                        input: CycleSource {
                                                                            ident: Ident {
                                                                                sym: cycle_0,
                                                                            },
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Cluster(
                                                                                    2,
                                                                                ),
                                                                                output_type: Some(
                                                                                    (u32 , u32),
                                                                                ),
                                                                            },
                                                                        },
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Process(
                                                                                0,
                                                                            ),
                                                                            output_type: Some(
                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                            ),
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Tick(
                                                                            1,
                                                                            Process(
                                                                                0,
                                                                            ),
                                                                        ),
                                                                        output_type: Some(
                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                        ),
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Tick(
                                                                        1,
                                                                        Process(
                                                                            0,
                                                                        ),
                                                                    ),
                                                                    output_type: Some(
                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                    ),
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Cluster(
                                                                    1,
                                                                ),
                                                                output_type: Some(
                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                ),
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Process(
                                                                0,
                                                            ),
                                                            output_type: Some(
                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                            ),
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Process(
                                                            0,
                                                        ),
                                                        output_type: Some(
                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                        ),
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Process(
                                                        0,
                                                    ),
                                                    output_type: Some(
                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                    ),
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Process(
                                                    0,
                                                ),
                                                output_type: Some(
                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                ),
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Tick(
                                                2,
                                                Process(
                                                    0,
                                                ),
                                            ),
                                            output_type: Some(
                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                            ),
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Tick(
                                            2,
                                            Process(
                                                0,
                                            ),
                                        ),
                                        output_type: Some(
                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                        ),
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        2,
                                        Process(
                                            0,
                                        ),
                                    ),
                                    output_type: Some(
                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                    ),
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    2,
                                    Process(
                                        0,
                                    ),
                                ),
                                output_type: Some(
                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                2,
                                Process(
                                    0,
                                ),
                            ),
                            output_type: Some(
                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                            ),
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            2,
                            Process(
                                0,
                            ),
                        ),
                        output_type: Some(
                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                        ),
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        2,
                        Process(
                            0,
                        ),
                    ),
                    output_type: Some(
                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                    ),
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Tick(
                    2,
                    Process(
                        0,
                    ),
                ),
                output_type: Some(
                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                ),
            },
        },
        out_location: Tick(
            2,
            Process(
                0,
            ),
        ),
        op_metadata: HydroIrOpMetadata,
    },
    CycleSink {
        ident: Ident {
            sym: cycle_2,
        },
        input: AntiJoin {
            pos: Tee {
                inner: <tee>: Chain {
                    first: DeferTick {
                        input: CycleSource {
                            ident: Ident {
                                sym: cycle_2,
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    2,
                                    Process(
                                        0,
                                    ),
                                ),
                                output_type: Some(
                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                2,
                                Process(
                                    0,
                                ),
                            ),
                            output_type: Some(
                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                            ),
                        },
                    },
                    second: Tee {
                        inner: <tee>: Map {
                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                            input: Map {
                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                input: Map {
                                    f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                    input: Network {
                                        serialize_fn: Some(
                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                        ),
                                        instantiate_fn: <network instantiate>,
                                        deserialize_fn: Some(
                                            | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                        ),
                                        input: Network {
                                            serialize_fn: Some(
                                                :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                            ),
                                            instantiate_fn: <network instantiate>,
                                            deserialize_fn: Some(
                                                | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                            ),
                                            input: Map {
                                                f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                input: CrossProduct {
                                                    left: Map {
                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                        input: FilterMap {
                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                            input: FoldKeyed {
                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                input: Persist {
                                                                    inner: Map {
                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                        input: Source {
                                                                            source: Iter(
                                                                                { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                            ),
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Process(
                                                                                    0,
                                                                                ),
                                                                                output_type: Some(
                                                                                    & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                ),
                                                                            },
                                                                        },
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Process(
                                                                                0,
                                                                            ),
                                                                            output_type: Some(
                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                            ),
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Process(
                                                                            0,
                                                                        ),
                                                                        output_type: Some(
                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                        ),
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Process(
                                                                        0,
                                                                    ),
                                                                    output_type: Some(
                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                    ),
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Process(
                                                                    0,
                                                                ),
                                                                output_type: Some(
                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                ),
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Tick(
                                                                3,
                                                                Process(
                                                                    0,
                                                                ),
                                                            ),
                                                            output_type: Some(
                                                                hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                            ),
                                                        },
                                                    },
                                                    right: Tee {
                                                        inner: <tee>: FilterMap {
                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                                                            input: Tee {
                                                                inner: <tee>: FoldKeyed {
                                                                    init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                                                                    acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                                                                    input: Tee {
                                                                        inner: <tee>: Chain {
                                                                            first: DeferTick {
                                                                                input: CycleSource {
                                                                                    ident: Ident {
                                                                                        sym: cycle_1,
                                                                                    },
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Tick(
                                                                                            2,
                                                                                            Process(
                                                                                                0,
                                                                                            ),
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Tick(
                                                                                        2,
                                                                                        Process(
                                                                                            0,
                                                                                        ),
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                    ),
                                                                                },
                                                                            },
                                                                            second: Tee {
                                                                                inner: <tee>: Map {
                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                                                                    input: Map {
                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                                                        input: Map {
                                                                                            f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                                                            input: Network {
                                                                                                serialize_fn: Some(
                                                                                                    :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                ),
                                                                                                instantiate_fn: <network instantiate>,
                                                                                                deserialize_fn: Some(
                                                                                                    | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                                                                ),
                                                                                                input: Network {
                                                                                                    serialize_fn: Some(
                                                                                                        :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                    ),
                                                                                                    instantiate_fn: <network instantiate>,
                                                                                                    deserialize_fn: Some(
                                                                                                        | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                                                                    ),
                                                                                                    input: Map {
                                                                                                        f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                                                        input: CrossProduct {
                                                                                                            left: Map {
                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                                                                input: FilterMap {
                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                                                                    input: FoldKeyed {
                                                                                                                        init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                                                        acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                                                        input: Persist {
                                                                                                                            inner: Map {
                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                                                                input: Source {
                                                                                                                                    source: Iter(
                                                                                                                                        { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                                                                    ),
                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                        location_kind: Process(
                                                                                                                                            0,
                                                                                                                                        ),
                                                                                                                                        output_type: Some(
                                                                                                                                            & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                    location_kind: Process(
                                                                                                                                        0,
                                                                                                                                    ),
                                                                                                                                    output_type: Some(
                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                            },
                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                location_kind: Process(
                                                                                                                                    0,
                                                                                                                                ),
                                                                                                                                output_type: Some(
                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        },
                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                            location_kind: Process(
                                                                                                                                0,
                                                                                                                            ),
                                                                                                                            output_type: Some(
                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    },
                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                        location_kind: Process(
                                                                                                                            0,
                                                                                                                        ),
                                                                                                                        output_type: Some(
                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                                                        ),
                                                                                                                    },
                                                                                                                },
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Tick(
                                                                                                                        1,
                                                                                                                        Process(
                                                                                                                            0,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                    output_type: Some(
                                                                                                                        hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                    ),
                                                                                                                },
                                                                                                            },
                                                                                                            right: Network {
                                                                                                                serialize_fn: Some(
                                                                                                                    :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                ),
                                                                                                                instantiate_fn: <network instantiate>,
                                                                                                                deserialize_fn: Some(
                                                                                                                    | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& b) . unwrap ()) },
                                                                                                                ),
                                                                                                                input: CycleSource {
                                                                                                                    ident: Ident {
                                                                                                                        sym: cycle_0,
                                                                                                                    },
                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                        location_kind: Cluster(
                                                                                                                            2,
                                                                                                                        ),
                                                                                                                        output_type: Some(
                                                                                                                            (u32 , u32),
                                                                                                                        ),
                                                                                                                    },
                                                                                                                },
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Process(
                                                                                                                        0,
                                                                                                                    ),
                                                                                                                    output_type: Some(
                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                    ),
                                                                                                                },
                                                                                                            },
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Tick(
                                                                                                                    1,
                                                                                                                    Process(
                                                                                                                        0,
                                                                                                                    ),
                                                                                                                ),
                                                                                                                output_type: Some(
                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Tick(
                                                                                                                1,
                                                                                                                Process(
                                                                                                                    0,
                                                                                                                ),
                                                                                                            ),
                                                                                                            output_type: Some(
                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Cluster(
                                                                                                            1,
                                                                                                        ),
                                                                                                        output_type: Some(
                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Process(
                                                                                                        0,
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Process(
                                                                                                    0,
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        metadata: HydroIrMetadata {
                                                                                            location_kind: Process(
                                                                                                0,
                                                                                            ),
                                                                                            output_type: Some(
                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Process(
                                                                                            0,
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Tick(
                                                                                        2,
                                                                                        Process(
                                                                                            0,
                                                                                        ),
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                    ),
                                                                                },
                                                                            },
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Tick(
                                                                                    2,
                                                                                    Process(
                                                                                        0,
                                                                                    ),
                                                                                ),
                                                                                output_type: Some(
                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                ),
                                                                            },
                                                                        },
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Tick(
                                                                                2,
                                                                                Process(
                                                                                    0,
                                                                                ),
                                                                            ),
                                                                            output_type: Some(
                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                            ),
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Tick(
                                                                            2,
                                                                            Process(
                                                                                0,
                                                                            ),
                                                                        ),
                                                                        output_type: Some(
                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                        ),
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Tick(
                                                                        2,
                                                                        Process(
                                                                            0,
                                                                        ),
                                                                    ),
                                                                    output_type: Some(
                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                    ),
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Tick(
                                                                    2,
                                                                    Process(
                                                                        0,
                                                                    ),
                                                                ),
                                                                output_type: Some(
                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                ),
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Tick(
                                                                2,
                                                                Process(
                                                                    0,
                                                                ),
                                                            ),
                                                            output_type: Some(
                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                            ),
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Tick(
                                                            3,
                                                            Process(
                                                                0,
                                                            ),
                                                        ),
                                                        output_type: Some(
                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                        ),
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Tick(
                                                        3,
                                                        Process(
                                                            0,
                                                        ),
                                                    ),
                                                    output_type: Some(
                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                    ),
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Cluster(
                                                    1,
                                                ),
                                                output_type: Some(
                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                ),
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Process(
                                                0,
                                            ),
                                            output_type: Some(
                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                            ),
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Process(
                                            0,
                                        ),
                                        output_type: Some(
                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                        ),
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Process(
                                        0,
                                    ),
                                    output_type: Some(
                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                    ),
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Process(
                                    0,
                                ),
                                output_type: Some(
                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                2,
                                Process(
                                    0,
                                ),
                            ),
                            output_type: Some(
                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                            ),
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            2,
                            Process(
                                0,
                            ),
                        ),
                        output_type: Some(
                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                        ),
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        2,
                        Process(
                            0,
                        ),
                    ),
                    output_type: Some(
                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                    ),
                },
            },
            neg: Tee {
                inner: <tee>: FilterMap {
                    f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                    input: Tee {
                        inner: <tee>: FoldKeyed {
                            init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                            input: Tee {
                                inner: <tee>: Chain {
                                    first: DeferTick {
                                        input: CycleSource {
                                            ident: Ident {
                                                sym: cycle_2,
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Tick(
                                                    2,
                                                    Process(
                                                        0,
                                                    ),
                                                ),
                                                output_type: Some(
                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                ),
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Tick(
                                                2,
                                                Process(
                                                    0,
                                                ),
                                            ),
                                            output_type: Some(
                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                            ),
                                        },
                                    },
                                    second: Tee {
                                        inner: <tee>: Map {
                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                            input: Map {
                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                input: Map {
                                                    f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                    input: Network {
                                                        serialize_fn: Some(
                                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                        ),
                                                        instantiate_fn: <network instantiate>,
                                                        deserialize_fn: Some(
                                                            | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                        ),
                                                        input: Network {
                                                            serialize_fn: Some(
                                                                :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                            ),
                                                            instantiate_fn: <network instantiate>,
                                                            deserialize_fn: Some(
                                                                | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                            ),
                                                            input: Map {
                                                                f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                input: CrossProduct {
                                                                    left: Map {
                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                        input: FilterMap {
                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                            input: FoldKeyed {
                                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                input: Persist {
                                                                                    inner: Map {
                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                        input: Source {
                                                                                            source: Iter(
                                                                                                { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                            ),
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Process(
                                                                                                    0,
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        metadata: HydroIrMetadata {
                                                                                            location_kind: Process(
                                                                                                0,
                                                                                            ),
                                                                                            output_type: Some(
                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Process(
                                                                                            0,
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Process(
                                                                                        0,
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                    ),
                                                                                },
                                                                            },
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Process(
                                                                                    0,
                                                                                ),
                                                                                output_type: Some(
                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                ),
                                                                            },
                                                                        },
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Tick(
                                                                                3,
                                                                                Process(
                                                                                    0,
                                                                                ),
                                                                            ),
                                                                            output_type: Some(
                                                                                hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                            ),
                                                                        },
                                                                    },
                                                                    right: Tee {
                                                                        inner: <tee>: FilterMap {
                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                                                                            input: Tee {
                                                                                inner: <tee>: FoldKeyed {
                                                                                    init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                                                                                    acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                                                                                    input: Tee {
                                                                                        inner: <tee>: Chain {
                                                                                            first: DeferTick {
                                                                                                input: CycleSource {
                                                                                                    ident: Ident {
                                                                                                        sym: cycle_1,
                                                                                                    },
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Tick(
                                                                                                            2,
                                                                                                            Process(
                                                                                                                0,
                                                                                                            ),
                                                                                                        ),
                                                                                                        output_type: Some(
                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Tick(
                                                                                                        2,
                                                                                                        Process(
                                                                                                            0,
                                                                                                        ),
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            second: Tee {
                                                                                                inner: <tee>: Map {
                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                                                                                    input: Map {
                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                                                                        input: Map {
                                                                                                            f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                                                                            input: Network {
                                                                                                                serialize_fn: Some(
                                                                                                                    :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                ),
                                                                                                                instantiate_fn: <network instantiate>,
                                                                                                                deserialize_fn: Some(
                                                                                                                    | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                                                                                ),
                                                                                                                input: Network {
                                                                                                                    serialize_fn: Some(
                                                                                                                        :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                                    ),
                                                                                                                    instantiate_fn: <network instantiate>,
                                                                                                                    deserialize_fn: Some(
                                                                                                                        | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                                                                                    ),
                                                                                                                    input: Map {
                                                                                                                        f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                                                                        input: CrossProduct {
                                                                                                                            left: Map {
                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                                                                                input: FilterMap {
                                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                                                                                    input: FoldKeyed {
                                                                                                                                        init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                                                                        acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                                                                        input: Persist {
                                                                                                                                            inner: Map {
                                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                                                                                input: Source {
                                                                                                                                                    source: Iter(
                                                                                                                                                        { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                                                                                    ),
                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                        location_kind: Process(
                                                                                                                                                            0,
                                                                                                                                                        ),
                                                                                                                                                        output_type: Some(
                                                                                                                                                            & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                        ),
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                    location_kind: Process(
                                                                                                                                                        0,
                                                                                                                                                    ),
                                                                                                                                                    output_type: Some(
                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                    ),
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                location_kind: Process(
                                                                                                                                                    0,
                                                                                                                                                ),
                                                                                                                                                output_type: Some(
                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                ),
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                            location_kind: Process(
                                                                                                                                                0,
                                                                                                                                            ),
                                                                                                                                            output_type: Some(
                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                                                                            ),
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                        location_kind: Process(
                                                                                                                                            0,
                                                                                                                                        ),
                                                                                                                                        output_type: Some(
                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                    location_kind: Tick(
                                                                                                                                        1,
                                                                                                                                        Process(
                                                                                                                                            0,
                                                                                                                                        ),
                                                                                                                                    ),
                                                                                                                                    output_type: Some(
                                                                                                                                        hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                            },
                                                                                                                            right: Network {
                                                                                                                                serialize_fn: Some(
                                                                                                                                    :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                ),
                                                                                                                                instantiate_fn: <network instantiate>,
                                                                                                                                deserialize_fn: Some(
                                                                                                                                    | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& b) . unwrap ()) },
                                                                                                                                ),
                                                                                                                                input: CycleSource {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: cycle_0,
                                                                                                                                    },
                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                        location_kind: Cluster(
                                                                                                                                            2,
                                                                                                                                        ),
                                                                                                                                        output_type: Some(
                                                                                                                                            (u32 , u32),
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                    location_kind: Process(
                                                                                                                                        0,
                                                                                                                                    ),
                                                                                                                                    output_type: Some(
                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                            },
                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                location_kind: Tick(
                                                                                                                                    1,
                                                                                                                                    Process(
                                                                                                                                        0,
                                                                                                                                    ),
                                                                                                                                ),
                                                                                                                                output_type: Some(
                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        },
                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                            location_kind: Tick(
                                                                                                                                1,
                                                                                                                                Process(
                                                                                                                                    0,
                                                                                                                                ),
                                                                                                                            ),
                                                                                                                            output_type: Some(
                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    },
                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                        location_kind: Cluster(
                                                                                                                            1,
                                                                                                                        ),
                                                                                                                        output_type: Some(
                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                        ),
                                                                                                                    },
                                                                                                                },
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Process(
                                                                                                                        0,
                                                                                                                    ),
                                                                                                                    output_type: Some(
                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                    ),
                                                                                                                },
                                                                                                            },
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Process(
                                                                                                                    0,
                                                                                                                ),
                                                                                                                output_type: Some(
                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Process(
                                                                                                                0,
                                                                                                            ),
                                                                                                            output_type: Some(
                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Process(
                                                                                                            0,
                                                                                                        ),
                                                                                                        output_type: Some(
                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Tick(
                                                                                                        2,
                                                                                                        Process(
                                                                                                            0,
                                                                                                        ),
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Tick(
                                                                                                    2,
                                                                                                    Process(
                                                                                                        0,
                                                                                                    ),
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        metadata: HydroIrMetadata {
                                                                                            location_kind: Tick(
                                                                                                2,
                                                                                                Process(
                                                                                                    0,
                                                                                                ),
                                                                                            ),
                                                                                            output_type: Some(
                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Tick(
                                                                                            2,
                                                                                            Process(
                                                                                                0,
                                                                                            ),
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Tick(
                                                                                        2,
                                                                                        Process(
                                                                                            0,
                                                                                        ),
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                    ),
                                                                                },
                                                                            },
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Tick(
                                                                                    2,
                                                                                    Process(
                                                                                        0,
                                                                                    ),
                                                                                ),
                                                                                output_type: Some(
                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                ),
                                                                            },
                                                                        },
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Tick(
                                                                                2,
                                                                                Process(
                                                                                    0,
                                                                                ),
                                                                            ),
                                                                            output_type: Some(
                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                            ),
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Tick(
                                                                            3,
                                                                            Process(
                                                                                0,
                                                                            ),
                                                                        ),
                                                                        output_type: Some(
                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                        ),
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Tick(
                                                                        3,
                                                                        Process(
                                                                            0,
                                                                        ),
                                                                    ),
                                                                    output_type: Some(
                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                    ),
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Cluster(
                                                                    1,
                                                                ),
                                                                output_type: Some(
                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                ),
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Process(
                                                                0,
                                                            ),
                                                            output_type: Some(
                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                            ),
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Process(
                                                            0,
                                                        ),
                                                        output_type: Some(
                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                        ),
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Process(
                                                        0,
                                                    ),
                                                    output_type: Some(
                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                    ),
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Process(
                                                    0,
                                                ),
                                                output_type: Some(
                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                ),
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Tick(
                                                2,
                                                Process(
                                                    0,
                                                ),
                                            ),
                                            output_type: Some(
                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                            ),
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Tick(
                                            2,
                                            Process(
                                                0,
                                            ),
                                        ),
                                        output_type: Some(
                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                        ),
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        2,
                                        Process(
                                            0,
                                        ),
                                    ),
                                    output_type: Some(
                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                    ),
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    2,
                                    Process(
                                        0,
                                    ),
                                ),
                                output_type: Some(
                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                2,
                                Process(
                                    0,
                                ),
                            ),
                            output_type: Some(
                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                            ),
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            2,
                            Process(
                                0,
                            ),
                        ),
                        output_type: Some(
                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                        ),
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        2,
                        Process(
                            0,
                        ),
                    ),
                    output_type: Some(
                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                    ),
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Tick(
                    2,
                    Process(
                        0,
                    ),
                ),
                output_type: Some(
                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                ),
            },
        },
        out_location: Tick(
            2,
            Process(
                0,
            ),
        ),
        op_metadata: HydroIrOpMetadata,
    },
    CycleSink {
        ident: Ident {
            sym: cycle_0,
        },
        input: Map {
            f: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , core :: option :: Option < u32 >) , (u32 , u32) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: paxos_bench :: * ; move | (virtual_id , payload) | { let value = if let Some (payload) = payload { payload + 1 } else { 0 } ; (virtual_id , value) } }),
            input: Chain {
                first: FlatMap {
                    f: stageleft :: runtime_support :: fn1_type_hint :: < () , std :: iter :: Map < std :: ops :: Range < u32 > , _ > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; let num_clients_per_node__free = 100usize ; move | _ | (0 .. num_clients_per_node__free as u32) . map (move | virtual_id | { (virtual_id , None) }) }),
                    input: Tee {
                        inner: <tee>: Source {
                            source: Iter(
                                { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: tick :: * ; let e__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; () } ; [e__free] },
                            ),
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    0,
                                    Cluster(
                                        2,
                                    ),
                                ),
                                output_type: Some(
                                    (),
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                0,
                                Cluster(
                                    2,
                                ),
                            ),
                            output_type: Some(
                                (),
                            ),
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            0,
                            Cluster(
                                2,
                            ),
                        ),
                        output_type: Some(
                            (u32 , core :: option :: Option < u32 >),
                        ),
                    },
                },
                second: Tee {
                    inner: <tee>: Map {
                        f: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , (u32 , core :: option :: Option < u32 >) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (virtual_id , payload) | (virtual_id , Some (payload)) }),
                        input: Network {
                            serialize_fn: Some(
                                :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (u32 , u32)) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                            ),
                            instantiate_fn: <network instantiate>,
                            deserialize_fn: Some(
                                | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& res . unwrap ()) . unwrap () },
                            ),
                            input: Tee {
                                inner: <tee>: FilterMap {
                                    f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                                    input: Tee {
                                        inner: <tee>: FoldKeyed {
                                            init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                                            input: Tee {
                                                inner: <tee>: Chain {
                                                    first: DeferTick {
                                                        input: CycleSource {
                                                            ident: Ident {
                                                                sym: cycle_2,
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Tick(
                                                                    2,
                                                                    Process(
                                                                        0,
                                                                    ),
                                                                ),
                                                                output_type: Some(
                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                ),
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Tick(
                                                                2,
                                                                Process(
                                                                    0,
                                                                ),
                                                            ),
                                                            output_type: Some(
                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                            ),
                                                        },
                                                    },
                                                    second: Tee {
                                                        inner: <tee>: Map {
                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                                            input: Map {
                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                                input: Map {
                                                                    f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                                    input: Network {
                                                                        serialize_fn: Some(
                                                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                        ),
                                                                        instantiate_fn: <network instantiate>,
                                                                        deserialize_fn: Some(
                                                                            | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                                        ),
                                                                        input: Network {
                                                                            serialize_fn: Some(
                                                                                :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                            ),
                                                                            instantiate_fn: <network instantiate>,
                                                                            deserialize_fn: Some(
                                                                                | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                                            ),
                                                                            input: Map {
                                                                                f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                                input: CrossProduct {
                                                                                    left: Map {
                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                                        input: FilterMap {
                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                                            input: FoldKeyed {
                                                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                                input: Persist {
                                                                                                    inner: Map {
                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                                        input: Source {
                                                                                                            source: Iter(
                                                                                                                { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                                            ),
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Process(
                                                                                                                    0,
                                                                                                                ),
                                                                                                                output_type: Some(
                                                                                                                    & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Process(
                                                                                                                0,
                                                                                                            ),
                                                                                                            output_type: Some(
                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Process(
                                                                                                            0,
                                                                                                        ),
                                                                                                        output_type: Some(
                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Process(
                                                                                                        0,
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Process(
                                                                                                    0,
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        metadata: HydroIrMetadata {
                                                                                            location_kind: Tick(
                                                                                                3,
                                                                                                Process(
                                                                                                    0,
                                                                                                ),
                                                                                            ),
                                                                                            output_type: Some(
                                                                                                hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    right: Tee {
                                                                                        inner: <tee>: FilterMap {
                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                                                                                            input: Tee {
                                                                                                inner: <tee>: FoldKeyed {
                                                                                                    init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                                                                                                    acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                                                                                                    input: Tee {
                                                                                                        inner: <tee>: Chain {
                                                                                                            first: DeferTick {
                                                                                                                input: CycleSource {
                                                                                                                    ident: Ident {
                                                                                                                        sym: cycle_1,
                                                                                                                    },
                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                        location_kind: Tick(
                                                                                                                            2,
                                                                                                                            Process(
                                                                                                                                0,
                                                                                                                            ),
                                                                                                                        ),
                                                                                                                        output_type: Some(
                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                        ),
                                                                                                                    },
                                                                                                                },
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Tick(
                                                                                                                        2,
                                                                                                                        Process(
                                                                                                                            0,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                    output_type: Some(
                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                    ),
                                                                                                                },
                                                                                                            },
                                                                                                            second: Tee {
                                                                                                                inner: <tee>: Map {
                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                                                                                                    input: Map {
                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                                                                                        input: Map {
                                                                                                                            f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                                                                                            input: Network {
                                                                                                                                serialize_fn: Some(
                                                                                                                                    :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                ),
                                                                                                                                instantiate_fn: <network instantiate>,
                                                                                                                                deserialize_fn: Some(
                                                                                                                                    | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                                                                                                ),
                                                                                                                                input: Network {
                                                                                                                                    serialize_fn: Some(
                                                                                                                                        :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                                                    ),
                                                                                                                                    instantiate_fn: <network instantiate>,
                                                                                                                                    deserialize_fn: Some(
                                                                                                                                        | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                                                                                                    ),
                                                                                                                                    input: Map {
                                                                                                                                        f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                                                                                        input: CrossProduct {
                                                                                                                                            left: Map {
                                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                                                                                                input: FilterMap {
                                                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                                                                                                    input: FoldKeyed {
                                                                                                                                                        init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                                                                                        acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                                                                                        input: Persist {
                                                                                                                                                            inner: Map {
                                                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                                                                                                input: Source {
                                                                                                                                                                    source: Iter(
                                                                                                                                                                        { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                                                                                                    ),
                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                            0,
                                                                                                                                                                        ),
                                                                                                                                                                        output_type: Some(
                                                                                                                                                                            & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                        ),
                                                                                                                                                                    },
                                                                                                                                                                },
                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                        0,
                                                                                                                                                                    ),
                                                                                                                                                                    output_type: Some(
                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                    ),
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                location_kind: Process(
                                                                                                                                                                    0,
                                                                                                                                                                ),
                                                                                                                                                                output_type: Some(
                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                ),
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                            location_kind: Process(
                                                                                                                                                                0,
                                                                                                                                                            ),
                                                                                                                                                            output_type: Some(
                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                                                                                            ),
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                        location_kind: Process(
                                                                                                                                                            0,
                                                                                                                                                        ),
                                                                                                                                                        output_type: Some(
                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                                                                                        ),
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                    location_kind: Tick(
                                                                                                                                                        1,
                                                                                                                                                        Process(
                                                                                                                                                            0,
                                                                                                                                                        ),
                                                                                                                                                    ),
                                                                                                                                                    output_type: Some(
                                                                                                                                                        hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                    ),
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            right: Network {
                                                                                                                                                serialize_fn: Some(
                                                                                                                                                    :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                                ),
                                                                                                                                                instantiate_fn: <network instantiate>,
                                                                                                                                                deserialize_fn: Some(
                                                                                                                                                    | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& b) . unwrap ()) },
                                                                                                                                                ),
                                                                                                                                                input: CycleSource {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: cycle_0,
                                                                                                                                                    },
                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                        location_kind: Cluster(
                                                                                                                                                            2,
                                                                                                                                                        ),
                                                                                                                                                        output_type: Some(
                                                                                                                                                            (u32 , u32),
                                                                                                                                                        ),
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                    location_kind: Process(
                                                                                                                                                        0,
                                                                                                                                                    ),
                                                                                                                                                    output_type: Some(
                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                    ),
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                location_kind: Tick(
                                                                                                                                                    1,
                                                                                                                                                    Process(
                                                                                                                                                        0,
                                                                                                                                                    ),
                                                                                                                                                ),
                                                                                                                                                output_type: Some(
                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                ),
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                            location_kind: Tick(
                                                                                                                                                1,
                                                                                                                                                Process(
                                                                                                                                                    0,
                                                                                                                                                ),
                                                                                                                                            ),
                                                                                                                                            output_type: Some(
                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                            ),
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                        location_kind: Cluster(
                                                                                                                                            1,
                                                                                                                                        ),
                                                                                                                                        output_type: Some(
                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                    location_kind: Process(
                                                                                                                                        0,
                                                                                                                                    ),
                                                                                                                                    output_type: Some(
                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                            },
                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                location_kind: Process(
                                                                                                                                    0,
                                                                                                                                ),
                                                                                                                                output_type: Some(
                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        },
                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                            location_kind: Process(
                                                                                                                                0,
                                                                                                                            ),
                                                                                                                            output_type: Some(
                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    },
                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                        location_kind: Process(
                                                                                                                            0,
                                                                                                                        ),
                                                                                                                        output_type: Some(
                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                        ),
                                                                                                                    },
                                                                                                                },
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Tick(
                                                                                                                        2,
                                                                                                                        Process(
                                                                                                                            0,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                    output_type: Some(
                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                    ),
                                                                                                                },
                                                                                                            },
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Tick(
                                                                                                                    2,
                                                                                                                    Process(
                                                                                                                        0,
                                                                                                                    ),
                                                                                                                ),
                                                                                                                output_type: Some(
                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Tick(
                                                                                                                2,
                                                                                                                Process(
                                                                                                                    0,
                                                                                                                ),
                                                                                                            ),
                                                                                                            output_type: Some(
                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Tick(
                                                                                                            2,
                                                                                                            Process(
                                                                                                                0,
                                                                                                            ),
                                                                                                        ),
                                                                                                        output_type: Some(
                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Tick(
                                                                                                        2,
                                                                                                        Process(
                                                                                                            0,
                                                                                                        ),
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Tick(
                                                                                                    2,
                                                                                                    Process(
                                                                                                        0,
                                                                                                    ),
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        metadata: HydroIrMetadata {
                                                                                            location_kind: Tick(
                                                                                                2,
                                                                                                Process(
                                                                                                    0,
                                                                                                ),
                                                                                            ),
                                                                                            output_type: Some(
                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Tick(
                                                                                            3,
                                                                                            Process(
                                                                                                0,
                                                                                            ),
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Tick(
                                                                                        3,
                                                                                        Process(
                                                                                            0,
                                                                                        ),
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                    ),
                                                                                },
                                                                            },
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Cluster(
                                                                                    1,
                                                                                ),
                                                                                output_type: Some(
                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                ),
                                                                            },
                                                                        },
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Process(
                                                                                0,
                                                                            ),
                                                                            output_type: Some(
                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                            ),
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Process(
                                                                            0,
                                                                        ),
                                                                        output_type: Some(
                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                        ),
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Process(
                                                                        0,
                                                                    ),
                                                                    output_type: Some(
                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                    ),
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Process(
                                                                    0,
                                                                ),
                                                                output_type: Some(
                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                ),
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Tick(
                                                                2,
                                                                Process(
                                                                    0,
                                                                ),
                                                            ),
                                                            output_type: Some(
                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                            ),
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Tick(
                                                            2,
                                                            Process(
                                                                0,
                                                            ),
                                                        ),
                                                        output_type: Some(
                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                        ),
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Tick(
                                                        2,
                                                        Process(
                                                            0,
                                                        ),
                                                    ),
                                                    output_type: Some(
                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                    ),
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Tick(
                                                    2,
                                                    Process(
                                                        0,
                                                    ),
                                                ),
                                                output_type: Some(
                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                ),
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Tick(
                                                2,
                                                Process(
                                                    0,
                                                ),
                                            ),
                                            output_type: Some(
                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                            ),
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Tick(
                                            2,
                                            Process(
                                                0,
                                            ),
                                        ),
                                        output_type: Some(
                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                        ),
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        2,
                                        Process(
                                            0,
                                        ),
                                    ),
                                    output_type: Some(
                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                    ),
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Cluster(
                                    2,
                                ),
                                output_type: Some(
                                    (u32 , u32),
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                0,
                                Cluster(
                                    2,
                                ),
                            ),
                            output_type: Some(
                                (u32 , core :: option :: Option < u32 >),
                            ),
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            0,
                            Cluster(
                                2,
                            ),
                        ),
                        output_type: Some(
                            (u32 , core :: option :: Option < u32 >),
                        ),
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        0,
                        Cluster(
                            2,
                        ),
                    ),
                    output_type: Some(
                        (u32 , core :: option :: Option < u32 >),
                    ),
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Cluster(
                    2,
                ),
                output_type: Some(
                    (u32 , u32),
                ),
            },
        },
        out_location: Cluster(
            2,
        ),
        op_metadata: HydroIrOpMetadata,
    },
    CycleSink {
        ident: Ident {
            sym: cycle_3,
        },
        input: ReduceKeyed {
            f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < std :: time :: Instant , std :: time :: Instant , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | curr_time , new_time | { if new_time > * curr_time { * curr_time = new_time ; } } }),
            input: Chain {
                first: Chain {
                    first: Tee {
                        inner: <tee>: DeferTick {
                            input: CycleSource {
                                ident: Ident {
                                    sym: cycle_3,
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        0,
                                        Cluster(
                                            2,
                                        ),
                                    ),
                                    output_type: Some(
                                        (usize , std :: time :: Instant),
                                    ),
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    0,
                                    Cluster(
                                        2,
                                    ),
                                ),
                                output_type: Some(
                                    (usize , std :: time :: Instant),
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                0,
                                Cluster(
                                    2,
                                ),
                            ),
                            output_type: Some(
                                (usize , std :: time :: Instant),
                            ),
                        },
                    },
                    second: FlatMap {
                        f: stageleft :: runtime_support :: fn1_type_hint :: < std :: time :: Instant , std :: iter :: Map < std :: ops :: Range < usize > , _ > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; let num_clients_per_node__free = 100usize ; move | now | (0 .. num_clients_per_node__free) . map (move | virtual_id | (virtual_id , now)) }),
                        input: Map {
                            f: stageleft :: runtime_support :: fn1_type_hint :: < () , std :: time :: Instant > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | _ | Instant :: now () }),
                            input: Tee {
                                inner: <tee>: Source {
                                    source: Iter(
                                        { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: tick :: * ; let e__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; () } ; [e__free] },
                                    ),
                                    metadata: HydroIrMetadata {
                                        location_kind: Tick(
                                            0,
                                            Cluster(
                                                2,
                                            ),
                                        ),
                                        output_type: Some(
                                            (),
                                        ),
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        0,
                                        Cluster(
                                            2,
                                        ),
                                    ),
                                    output_type: Some(
                                        (),
                                    ),
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    0,
                                    Cluster(
                                        2,
                                    ),
                                ),
                                output_type: Some(
                                    std :: time :: Instant,
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                0,
                                Cluster(
                                    2,
                                ),
                            ),
                            output_type: Some(
                                (usize , std :: time :: Instant),
                            ),
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            0,
                            Cluster(
                                2,
                            ),
                        ),
                        output_type: Some(
                            (usize , std :: time :: Instant),
                        ),
                    },
                },
                second: Tee {
                    inner: <tee>: Map {
                        f: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , core :: option :: Option < u32 >) , (usize , std :: time :: Instant) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (key , _payload) | (key as usize , Instant :: now ()) }),
                        input: Tee {
                            inner: <tee>: Map {
                                f: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , (u32 , core :: option :: Option < u32 >) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (virtual_id , payload) | (virtual_id , Some (payload)) }),
                                input: Network {
                                    serialize_fn: Some(
                                        :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (u32 , u32)) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                    ),
                                    instantiate_fn: <network instantiate>,
                                    deserialize_fn: Some(
                                        | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& res . unwrap ()) . unwrap () },
                                    ),
                                    input: Tee {
                                        inner: <tee>: FilterMap {
                                            f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                                            input: Tee {
                                                inner: <tee>: FoldKeyed {
                                                    init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                                                    acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                                                    input: Tee {
                                                        inner: <tee>: Chain {
                                                            first: DeferTick {
                                                                input: CycleSource {
                                                                    ident: Ident {
                                                                        sym: cycle_2,
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Tick(
                                                                            2,
                                                                            Process(
                                                                                0,
                                                                            ),
                                                                        ),
                                                                        output_type: Some(
                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                        ),
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Tick(
                                                                        2,
                                                                        Process(
                                                                            0,
                                                                        ),
                                                                    ),
                                                                    output_type: Some(
                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                    ),
                                                                },
                                                            },
                                                            second: Tee {
                                                                inner: <tee>: Map {
                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                                                    input: Map {
                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                                        input: Map {
                                                                            f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                                            input: Network {
                                                                                serialize_fn: Some(
                                                                                    :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                ),
                                                                                instantiate_fn: <network instantiate>,
                                                                                deserialize_fn: Some(
                                                                                    | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                                                ),
                                                                                input: Network {
                                                                                    serialize_fn: Some(
                                                                                        :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                    ),
                                                                                    instantiate_fn: <network instantiate>,
                                                                                    deserialize_fn: Some(
                                                                                        | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                                                    ),
                                                                                    input: Map {
                                                                                        f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                                        input: CrossProduct {
                                                                                            left: Map {
                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                                                input: FilterMap {
                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                                                    input: FoldKeyed {
                                                                                                        init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                                        acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                                        input: Persist {
                                                                                                            inner: Map {
                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                                                input: Source {
                                                                                                                    source: Iter(
                                                                                                                        { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                                                    ),
                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                        location_kind: Process(
                                                                                                                            0,
                                                                                                                        ),
                                                                                                                        output_type: Some(
                                                                                                                            & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                        ),
                                                                                                                    },
                                                                                                                },
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Process(
                                                                                                                        0,
                                                                                                                    ),
                                                                                                                    output_type: Some(
                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                    ),
                                                                                                                },
                                                                                                            },
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Process(
                                                                                                                    0,
                                                                                                                ),
                                                                                                                output_type: Some(
                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Process(
                                                                                                                0,
                                                                                                            ),
                                                                                                            output_type: Some(
                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Process(
                                                                                                            0,
                                                                                                        ),
                                                                                                        output_type: Some(
                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Tick(
                                                                                                        3,
                                                                                                        Process(
                                                                                                            0,
                                                                                                        ),
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            right: Tee {
                                                                                                inner: <tee>: FilterMap {
                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                                                                                                    input: Tee {
                                                                                                        inner: <tee>: FoldKeyed {
                                                                                                            init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                                                                                                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                                                                                                            input: Tee {
                                                                                                                inner: <tee>: Chain {
                                                                                                                    first: DeferTick {
                                                                                                                        input: CycleSource {
                                                                                                                            ident: Ident {
                                                                                                                                sym: cycle_1,
                                                                                                                            },
                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                location_kind: Tick(
                                                                                                                                    2,
                                                                                                                                    Process(
                                                                                                                                        0,
                                                                                                                                    ),
                                                                                                                                ),
                                                                                                                                output_type: Some(
                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        },
                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                            location_kind: Tick(
                                                                                                                                2,
                                                                                                                                Process(
                                                                                                                                    0,
                                                                                                                                ),
                                                                                                                            ),
                                                                                                                            output_type: Some(
                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    },
                                                                                                                    second: Tee {
                                                                                                                        inner: <tee>: Map {
                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                                                                                                            input: Map {
                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                                                                                                input: Map {
                                                                                                                                    f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                                                                                                    input: Network {
                                                                                                                                        serialize_fn: Some(
                                                                                                                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                        ),
                                                                                                                                        instantiate_fn: <network instantiate>,
                                                                                                                                        deserialize_fn: Some(
                                                                                                                                            | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                                                                                                        ),
                                                                                                                                        input: Network {
                                                                                                                                            serialize_fn: Some(
                                                                                                                                                :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                                                            ),
                                                                                                                                            instantiate_fn: <network instantiate>,
                                                                                                                                            deserialize_fn: Some(
                                                                                                                                                | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                                                                                                            ),
                                                                                                                                            input: Map {
                                                                                                                                                f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                                                                                                input: CrossProduct {
                                                                                                                                                    left: Map {
                                                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                                                                                                        input: FilterMap {
                                                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                                                                                                            input: FoldKeyed {
                                                                                                                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                                                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                                                                                                input: Persist {
                                                                                                                                                                    inner: Map {
                                                                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                                                                                                        input: Source {
                                                                                                                                                                            source: Iter(
                                                                                                                                                                                { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                                                                                                            ),
                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                    0,
                                                                                                                                                                                ),
                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                    & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                ),
                                                                                                                                                                            },
                                                                                                                                                                        },
                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                0,
                                                                                                                                                                            ),
                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                            ),
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                            0,
                                                                                                                                                                        ),
                                                                                                                                                                        output_type: Some(
                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                        ),
                                                                                                                                                                    },
                                                                                                                                                                },
                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                        0,
                                                                                                                                                                    ),
                                                                                                                                                                    output_type: Some(
                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                                                                                                    ),
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                location_kind: Process(
                                                                                                                                                                    0,
                                                                                                                                                                ),
                                                                                                                                                                output_type: Some(
                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                                                                                                ),
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                1,
                                                                                                                                                                Process(
                                                                                                                                                                    0,
                                                                                                                                                                ),
                                                                                                                                                            ),
                                                                                                                                                            output_type: Some(
                                                                                                                                                                hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                            ),
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    right: Network {
                                                                                                                                                        serialize_fn: Some(
                                                                                                                                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                                        ),
                                                                                                                                                        instantiate_fn: <network instantiate>,
                                                                                                                                                        deserialize_fn: Some(
                                                                                                                                                            | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& b) . unwrap ()) },
                                                                                                                                                        ),
                                                                                                                                                        input: CycleSource {
                                                                                                                                                            ident: Ident {
                                                                                                                                                                sym: cycle_0,
                                                                                                                                                            },
                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                location_kind: Cluster(
                                                                                                                                                                    2,
                                                                                                                                                                ),
                                                                                                                                                                output_type: Some(
                                                                                                                                                                    (u32 , u32),
                                                                                                                                                                ),
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                            location_kind: Process(
                                                                                                                                                                0,
                                                                                                                                                            ),
                                                                                                                                                            output_type: Some(
                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                            ),
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                        location_kind: Tick(
                                                                                                                                                            1,
                                                                                                                                                            Process(
                                                                                                                                                                0,
                                                                                                                                                            ),
                                                                                                                                                        ),
                                                                                                                                                        output_type: Some(
                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                        ),
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                    location_kind: Tick(
                                                                                                                                                        1,
                                                                                                                                                        Process(
                                                                                                                                                            0,
                                                                                                                                                        ),
                                                                                                                                                    ),
                                                                                                                                                    output_type: Some(
                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                    ),
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                location_kind: Cluster(
                                                                                                                                                    1,
                                                                                                                                                ),
                                                                                                                                                output_type: Some(
                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                ),
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                            location_kind: Process(
                                                                                                                                                0,
                                                                                                                                            ),
                                                                                                                                            output_type: Some(
                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                            ),
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                        location_kind: Process(
                                                                                                                                            0,
                                                                                                                                        ),
                                                                                                                                        output_type: Some(
                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                    location_kind: Process(
                                                                                                                                        0,
                                                                                                                                    ),
                                                                                                                                    output_type: Some(
                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                            },
                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                location_kind: Process(
                                                                                                                                    0,
                                                                                                                                ),
                                                                                                                                output_type: Some(
                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        },
                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                            location_kind: Tick(
                                                                                                                                2,
                                                                                                                                Process(
                                                                                                                                    0,
                                                                                                                                ),
                                                                                                                            ),
                                                                                                                            output_type: Some(
                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    },
                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                        location_kind: Tick(
                                                                                                                            2,
                                                                                                                            Process(
                                                                                                                                0,
                                                                                                                            ),
                                                                                                                        ),
                                                                                                                        output_type: Some(
                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                        ),
                                                                                                                    },
                                                                                                                },
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Tick(
                                                                                                                        2,
                                                                                                                        Process(
                                                                                                                            0,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                    output_type: Some(
                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                    ),
                                                                                                                },
                                                                                                            },
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Tick(
                                                                                                                    2,
                                                                                                                    Process(
                                                                                                                        0,
                                                                                                                    ),
                                                                                                                ),
                                                                                                                output_type: Some(
                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Tick(
                                                                                                                2,
                                                                                                                Process(
                                                                                                                    0,
                                                                                                                ),
                                                                                                            ),
                                                                                                            output_type: Some(
                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Tick(
                                                                                                            2,
                                                                                                            Process(
                                                                                                                0,
                                                                                                            ),
                                                                                                        ),
                                                                                                        output_type: Some(
                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Tick(
                                                                                                        2,
                                                                                                        Process(
                                                                                                            0,
                                                                                                        ),
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Tick(
                                                                                                    3,
                                                                                                    Process(
                                                                                                        0,
                                                                                                    ),
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        metadata: HydroIrMetadata {
                                                                                            location_kind: Tick(
                                                                                                3,
                                                                                                Process(
                                                                                                    0,
                                                                                                ),
                                                                                            ),
                                                                                            output_type: Some(
                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Cluster(
                                                                                            1,
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Process(
                                                                                        0,
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                    ),
                                                                                },
                                                                            },
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Process(
                                                                                    0,
                                                                                ),
                                                                                output_type: Some(
                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                ),
                                                                            },
                                                                        },
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Process(
                                                                                0,
                                                                            ),
                                                                            output_type: Some(
                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                            ),
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Process(
                                                                            0,
                                                                        ),
                                                                        output_type: Some(
                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                        ),
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Tick(
                                                                        2,
                                                                        Process(
                                                                            0,
                                                                        ),
                                                                    ),
                                                                    output_type: Some(
                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                    ),
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Tick(
                                                                    2,
                                                                    Process(
                                                                        0,
                                                                    ),
                                                                ),
                                                                output_type: Some(
                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                ),
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Tick(
                                                                2,
                                                                Process(
                                                                    0,
                                                                ),
                                                            ),
                                                            output_type: Some(
                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                            ),
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Tick(
                                                            2,
                                                            Process(
                                                                0,
                                                            ),
                                                        ),
                                                        output_type: Some(
                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                        ),
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Tick(
                                                        2,
                                                        Process(
                                                            0,
                                                        ),
                                                    ),
                                                    output_type: Some(
                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                    ),
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Tick(
                                                    2,
                                                    Process(
                                                        0,
                                                    ),
                                                ),
                                                output_type: Some(
                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                ),
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Tick(
                                                2,
                                                Process(
                                                    0,
                                                ),
                                            ),
                                            output_type: Some(
                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                            ),
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Cluster(
                                            2,
                                        ),
                                        output_type: Some(
                                            (u32 , u32),
                                        ),
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        0,
                                        Cluster(
                                            2,
                                        ),
                                    ),
                                    output_type: Some(
                                        (u32 , core :: option :: Option < u32 >),
                                    ),
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    0,
                                    Cluster(
                                        2,
                                    ),
                                ),
                                output_type: Some(
                                    (u32 , core :: option :: Option < u32 >),
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                0,
                                Cluster(
                                    2,
                                ),
                            ),
                            output_type: Some(
                                (usize , std :: time :: Instant),
                            ),
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            0,
                            Cluster(
                                2,
                            ),
                        ),
                        output_type: Some(
                            (usize , std :: time :: Instant),
                        ),
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        0,
                        Cluster(
                            2,
                        ),
                    ),
                    output_type: Some(
                        (usize , std :: time :: Instant),
                    ),
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Tick(
                    0,
                    Cluster(
                        2,
                    ),
                ),
                output_type: Some(
                    (usize , std :: time :: Instant),
                ),
            },
        },
        out_location: Tick(
            0,
            Cluster(
                2,
            ),
        ),
        op_metadata: HydroIrOpMetadata,
    },
    ForEach {
        f: stageleft :: runtime_support :: fn1_type_hint :: < usize , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | num_clients_not_responded | println ! ("Awaiting {} clients" , num_clients_not_responded) }),
        input: Map {
            f: stageleft :: runtime_support :: fn1_type_hint :: < (usize , ()) , usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | (d , _signal) | d }),
            input: CrossSingleton {
                left: Tee {
                    inner: <tee>: FilterMap {
                        f: stageleft :: runtime_support :: fn1_type_hint :: < (usize , usize) , core :: option :: Option < usize > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (num_clients , num_clients_with_throughput) | { if num_clients > num_clients_with_throughput { Some (num_clients - num_clients_with_throughput) } else { None } } }),
                        input: CrossSingleton {
                            left: Tee {
                                inner: <tee>: Fold {
                                    init: stageleft :: runtime_support :: fn0_type_hint :: < usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | 0usize }),
                                    acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < usize , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , ()) , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | count , _ | * count += 1 }),
                                    input: FilterMap {
                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: membership :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                        input: FoldKeyed {
                                            init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: membership :: * ; | | false }),
                                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: membership :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                            input: Persist {
                                                inner: Map {
                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                    input: Source {
                                                        source: Iter(
                                                            { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client >] > (__hydro_lang_cluster_ids_2) } ; underlying_memberids__free },
                                                        ),
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Process(
                                                                3,
                                                            ),
                                                            output_type: Some(
                                                                & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client >,
                                                            ),
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Process(
                                                            3,
                                                        ),
                                                        output_type: Some(
                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                        ),
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Process(
                                                        3,
                                                    ),
                                                    output_type: Some(
                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                    ),
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Process(
                                                    3,
                                                ),
                                                output_type: Some(
                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , bool),
                                                ),
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Process(
                                                3,
                                            ),
                                            output_type: Some(
                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , ()),
                                            ),
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Process(
                                            3,
                                        ),
                                        output_type: Some(
                                            usize,
                                        ),
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        4,
                                        Process(
                                            3,
                                        ),
                                    ),
                                    output_type: Some(
                                        usize,
                                    ),
                                },
                            },
                            right: Fold {
                                init: stageleft :: runtime_support :: fn0_type_hint :: < usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | 0usize }),
                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < usize , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | count , _ | * count += 1 }),
                                input: Tee {
                                    inner: <tee>: Filter {
                                        f: stageleft :: runtime_support :: fn1_borrow_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) , bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_borrow_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , bool > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | throughputs | throughputs . sample_mean () > 0.0 }) ; { let orig = f__free ; move | (_k , v) | orig (v) } }),
                                        input: ReduceKeyed {
                                            f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | combined , new | { * combined = new ; } }),
                                            input: Persist {
                                                inner: Network {
                                                    serialize_fn: Some(
                                                        :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                    ),
                                                    instantiate_fn: <network instantiate>,
                                                    deserialize_fn: Some(
                                                        | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage > (& b) . unwrap ()) },
                                                    ),
                                                    input: Map {
                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , ()) , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | (d , _signal) | d }),
                                                        input: CrossSingleton {
                                                            left: Map {
                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (usize , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (_ , stats) | { stats } }),
                                                                input: Fold {
                                                                    init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | | (0 , { RollingAverage :: new () }) }),
                                                                    acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) , (usize , bool) , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (total , stats) , (batch_size , reset) | { if reset { if * total > 0 { stats . add_sample (* total as f64) ; } * total = 0 ; } else { * total += batch_size ; } } }),
                                                                    input: Persist {
                                                                        inner: Chain {
                                                                            first: Map {
                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < usize , (usize , bool) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | batch_size | (batch_size , false) }),
                                                                                input: Map {
                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (usize , ()) , usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | (d , _signal) | d }),
                                                                                    input: CrossSingleton {
                                                                                        left: Fold {
                                                                                            init: stageleft :: runtime_support :: fn0_type_hint :: < usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | 0usize }),
                                                                                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < usize , (u32 , core :: option :: Option < u32 >) , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | count , _ | * count += 1 }),
                                                                                            input: Tee {
                                                                                                inner: <tee>: Map {
                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , (u32 , core :: option :: Option < u32 >) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (virtual_id , payload) | (virtual_id , Some (payload)) }),
                                                                                                    input: Network {
                                                                                                        serialize_fn: Some(
                                                                                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (u32 , u32)) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                        ),
                                                                                                        instantiate_fn: <network instantiate>,
                                                                                                        deserialize_fn: Some(
                                                                                                            | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& res . unwrap ()) . unwrap () },
                                                                                                        ),
                                                                                                        input: Tee {
                                                                                                            inner: <tee>: FilterMap {
                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                                                                                                                input: Tee {
                                                                                                                    inner: <tee>: FoldKeyed {
                                                                                                                        init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                                                                                                                        acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                                                                                                                        input: Tee {
                                                                                                                            inner: <tee>: Chain {
                                                                                                                                first: DeferTick {
                                                                                                                                    input: CycleSource {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: cycle_2,
                                                                                                                                        },
                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                            location_kind: Tick(
                                                                                                                                                2,
                                                                                                                                                Process(
                                                                                                                                                    0,
                                                                                                                                                ),
                                                                                                                                            ),
                                                                                                                                            output_type: Some(
                                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                            ),
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                        location_kind: Tick(
                                                                                                                                            2,
                                                                                                                                            Process(
                                                                                                                                                0,
                                                                                                                                            ),
                                                                                                                                        ),
                                                                                                                                        output_type: Some(
                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                second: Tee {
                                                                                                                                    inner: <tee>: Map {
                                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                                                                                                                        input: Map {
                                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                                                                                                            input: Map {
                                                                                                                                                f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                                                                                                                input: Network {
                                                                                                                                                    serialize_fn: Some(
                                                                                                                                                        :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                                    ),
                                                                                                                                                    instantiate_fn: <network instantiate>,
                                                                                                                                                    deserialize_fn: Some(
                                                                                                                                                        | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                                                                                                                    ),
                                                                                                                                                    input: Network {
                                                                                                                                                        serialize_fn: Some(
                                                                                                                                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                                                                        ),
                                                                                                                                                        instantiate_fn: <network instantiate>,
                                                                                                                                                        deserialize_fn: Some(
                                                                                                                                                            | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                                                                                                                        ),
                                                                                                                                                        input: Map {
                                                                                                                                                            f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                                                                                                            input: CrossProduct {
                                                                                                                                                                left: Map {
                                                                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                                                                                                                    input: FilterMap {
                                                                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                                                                                                                        input: FoldKeyed {
                                                                                                                                                                            init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                                                                                                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                                                                                                            input: Persist {
                                                                                                                                                                                inner: Map {
                                                                                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                                                                                                                    input: Source {
                                                                                                                                                                                        source: Iter(
                                                                                                                                                                                            { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                                                                                                                        ),
                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                                0,
                                                                                                                                                                                            ),
                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                            ),
                                                                                                                                                                                        },
                                                                                                                                                                                    },
                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                            0,
                                                                                                                                                                                        ),
                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                        ),
                                                                                                                                                                                    },
                                                                                                                                                                                },
                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                                        0,
                                                                                                                                                                                    ),
                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                    ),
                                                                                                                                                                                },
                                                                                                                                                                            },
                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                    0,
                                                                                                                                                                                ),
                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                                                                                                                ),
                                                                                                                                                                            },
                                                                                                                                                                        },
                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                0,
                                                                                                                                                                            ),
                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                                                                                                            ),
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                        location_kind: Tick(
                                                                                                                                                                            3,
                                                                                                                                                                            Process(
                                                                                                                                                                                0,
                                                                                                                                                                            ),
                                                                                                                                                                        ),
                                                                                                                                                                        output_type: Some(
                                                                                                                                                                            hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                        ),
                                                                                                                                                                    },
                                                                                                                                                                },
                                                                                                                                                                right: Tee {
                                                                                                                                                                    inner: <tee>: FilterMap {
                                                                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                                                                                                                                                                        input: Tee {
                                                                                                                                                                            inner: <tee>: FoldKeyed {
                                                                                                                                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                                                                                                                                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                                                                                                                                                                                input: Tee {
                                                                                                                                                                                    inner: <tee>: Chain {
                                                                                                                                                                                        first: DeferTick {
                                                                                                                                                                                            input: CycleSource {
                                                                                                                                                                                                ident: Ident {
                                                                                                                                                                                                    sym: cycle_1,
                                                                                                                                                                                                },
                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                                                        2,
                                                                                                                                                                                                        Process(
                                                                                                                                                                                                            0,
                                                                                                                                                                                                        ),
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                    ),
                                                                                                                                                                                                },
                                                                                                                                                                                            },
                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                                                    2,
                                                                                                                                                                                                    Process(
                                                                                                                                                                                                        0,
                                                                                                                                                                                                    ),
                                                                                                                                                                                                ),
                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                ),
                                                                                                                                                                                            },
                                                                                                                                                                                        },
                                                                                                                                                                                        second: Tee {
                                                                                                                                                                                            inner: <tee>: Map {
                                                                                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                                                                                                                                                                                input: Map {
                                                                                                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                                                                                                                                                                    input: Map {
                                                                                                                                                                                                        f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                                                                                                                                                                        input: Network {
                                                                                                                                                                                                            serialize_fn: Some(
                                                                                                                                                                                                                :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                                                                                            ),
                                                                                                                                                                                                            instantiate_fn: <network instantiate>,
                                                                                                                                                                                                            deserialize_fn: Some(
                                                                                                                                                                                                                | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                                                                                                                                                                            ),
                                                                                                                                                                                                            input: Network {
                                                                                                                                                                                                                serialize_fn: Some(
                                                                                                                                                                                                                    :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                                                                                                                                ),
                                                                                                                                                                                                                instantiate_fn: <network instantiate>,
                                                                                                                                                                                                                deserialize_fn: Some(
                                                                                                                                                                                                                    | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                                                                                                                                                                                ),
                                                                                                                                                                                                                input: Map {
                                                                                                                                                                                                                    f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                                                                                                                                                                    input: CrossProduct {
                                                                                                                                                                                                                        left: Map {
                                                                                                                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                                                                                                                                                                            input: FilterMap {
                                                                                                                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                                                                                                                                                                                input: FoldKeyed {
                                                                                                                                                                                                                                    init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                                                                                                                                                                    acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                                                                                                                                                                    input: Persist {
                                                                                                                                                                                                                                        inner: Map {
                                                                                                                                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                                                                                                                                                                            input: Source {
                                                                                                                                                                                                                                                source: Iter(
                                                                                                                                                                                                                                                    { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                                                                                                        0,
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                                                                        & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                                                                                0,
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                                                                            0,
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                                                                                        0,
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                                                                                    1,
                                                                                                                                                                                                                                    Process(
                                                                                                                                                                                                                                        0,
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                                    hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        right: Network {
                                                                                                                                                                                                                            serialize_fn: Some(
                                                                                                                                                                                                                                :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                            instantiate_fn: <network instantiate>,
                                                                                                                                                                                                                            deserialize_fn: Some(
                                                                                                                                                                                                                                | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& b) . unwrap ()) },
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                            input: CycleSource {
                                                                                                                                                                                                                                ident: Ident {
                                                                                                                                                                                                                                    sym: cycle_0,
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                                                    location_kind: Cluster(
                                                                                                                                                                                                                                        2,
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                                                        (u32 , u32),
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                                                                1,
                                                                                                                                                                                                                                Process(
                                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                                        location_kind: Tick(
                                                                                                                                                                                                                            1,
                                                                                                                                                                                                                            Process(
                                                                                                                                                                                                                                0,
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                },
                                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                                    location_kind: Cluster(
                                                                                                                                                                                                                        1,
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                },
                                                                                                                                                                                                            },
                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                ),
                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                                ),
                                                                                                                                                                                                            },
                                                                                                                                                                                                        },
                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                                                0,
                                                                                                                                                                                                            ),
                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                            ),
                                                                                                                                                                                                        },
                                                                                                                                                                                                    },
                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                                            0,
                                                                                                                                                                                                        ),
                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                                        ),
                                                                                                                                                                                                    },
                                                                                                                                                                                                },
                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                                                        0,
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                    ),
                                                                                                                                                                                                },
                                                                                                                                                                                            },
                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                                                    2,
                                                                                                                                                                                                    Process(
                                                                                                                                                                                                        0,
                                                                                                                                                                                                    ),
                                                                                                                                                                                                ),
                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                ),
                                                                                                                                                                                            },
                                                                                                                                                                                        },
                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                                2,
                                                                                                                                                                                                Process(
                                                                                                                                                                                                    0,
                                                                                                                                                                                                ),
                                                                                                                                                                                            ),
                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                            ),
                                                                                                                                                                                        },
                                                                                                                                                                                    },
                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                        location_kind: Tick(
                                                                                                                                                                                            2,
                                                                                                                                                                                            Process(
                                                                                                                                                                                                0,
                                                                                                                                                                                            ),
                                                                                                                                                                                        ),
                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                        ),
                                                                                                                                                                                    },
                                                                                                                                                                                },
                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                                        2,
                                                                                                                                                                                        Process(
                                                                                                                                                                                            0,
                                                                                                                                                                                        ),
                                                                                                                                                                                    ),
                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                                                                                    ),
                                                                                                                                                                                },
                                                                                                                                                                            },
                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                                    2,
                                                                                                                                                                                    Process(
                                                                                                                                                                                        0,
                                                                                                                                                                                    ),
                                                                                                                                                                                ),
                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                                                                                ),
                                                                                                                                                                            },
                                                                                                                                                                        },
                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                2,
                                                                                                                                                                                Process(
                                                                                                                                                                                    0,
                                                                                                                                                                                ),
                                                                                                                                                                            ),
                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                            ),
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                        location_kind: Tick(
                                                                                                                                                                            2,
                                                                                                                                                                            Process(
                                                                                                                                                                                0,
                                                                                                                                                                            ),
                                                                                                                                                                        ),
                                                                                                                                                                        output_type: Some(
                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                        ),
                                                                                                                                                                    },
                                                                                                                                                                },
                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                        3,
                                                                                                                                                                        Process(
                                                                                                                                                                            0,
                                                                                                                                                                        ),
                                                                                                                                                                    ),
                                                                                                                                                                    output_type: Some(
                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                    ),
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                    3,
                                                                                                                                                                    Process(
                                                                                                                                                                        0,
                                                                                                                                                                    ),
                                                                                                                                                                ),
                                                                                                                                                                output_type: Some(
                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                ),
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                            location_kind: Cluster(
                                                                                                                                                                1,
                                                                                                                                                            ),
                                                                                                                                                            output_type: Some(
                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                            ),
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                        location_kind: Process(
                                                                                                                                                            0,
                                                                                                                                                        ),
                                                                                                                                                        output_type: Some(
                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                        ),
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                    location_kind: Process(
                                                                                                                                                        0,
                                                                                                                                                    ),
                                                                                                                                                    output_type: Some(
                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                    ),
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                location_kind: Process(
                                                                                                                                                    0,
                                                                                                                                                ),
                                                                                                                                                output_type: Some(
                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                ),
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                            location_kind: Process(
                                                                                                                                                0,
                                                                                                                                            ),
                                                                                                                                            output_type: Some(
                                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                            ),
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                        location_kind: Tick(
                                                                                                                                            2,
                                                                                                                                            Process(
                                                                                                                                                0,
                                                                                                                                            ),
                                                                                                                                        ),
                                                                                                                                        output_type: Some(
                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                    location_kind: Tick(
                                                                                                                                        2,
                                                                                                                                        Process(
                                                                                                                                            0,
                                                                                                                                        ),
                                                                                                                                    ),
                                                                                                                                    output_type: Some(
                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                            },
                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                location_kind: Tick(
                                                                                                                                    2,
                                                                                                                                    Process(
                                                                                                                                        0,
                                                                                                                                    ),
                                                                                                                                ),
                                                                                                                                output_type: Some(
                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        },
                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                            location_kind: Tick(
                                                                                                                                2,
                                                                                                                                Process(
                                                                                                                                    0,
                                                                                                                                ),
                                                                                                                            ),
                                                                                                                            output_type: Some(
                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    },
                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                        location_kind: Tick(
                                                                                                                            2,
                                                                                                                            Process(
                                                                                                                                0,
                                                                                                                            ),
                                                                                                                        ),
                                                                                                                        output_type: Some(
                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                        ),
                                                                                                                    },
                                                                                                                },
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Tick(
                                                                                                                        2,
                                                                                                                        Process(
                                                                                                                            0,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                    output_type: Some(
                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                    ),
                                                                                                                },
                                                                                                            },
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Tick(
                                                                                                                    2,
                                                                                                                    Process(
                                                                                                                        0,
                                                                                                                    ),
                                                                                                                ),
                                                                                                                output_type: Some(
                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Cluster(
                                                                                                                2,
                                                                                                            ),
                                                                                                            output_type: Some(
                                                                                                                (u32 , u32),
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Tick(
                                                                                                            0,
                                                                                                            Cluster(
                                                                                                                2,
                                                                                                            ),
                                                                                                        ),
                                                                                                        output_type: Some(
                                                                                                            (u32 , core :: option :: Option < u32 >),
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Tick(
                                                                                                        0,
                                                                                                        Cluster(
                                                                                                            2,
                                                                                                        ),
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        (u32 , core :: option :: Option < u32 >),
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Tick(
                                                                                                    0,
                                                                                                    Cluster(
                                                                                                        2,
                                                                                                    ),
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    usize,
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        right: Map {
                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < usize , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | _u | () }),
                                                                                            input: Filter {
                                                                                                f: stageleft :: runtime_support :: fn1_borrow_type_hint :: < usize , bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | c | * c == 0 }),
                                                                                                input: Fold {
                                                                                                    init: stageleft :: runtime_support :: fn0_type_hint :: < usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | 0usize }),
                                                                                                    acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < usize , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | count , _ | * count += 1 }),
                                                                                                    input: Tee {
                                                                                                        inner: <tee>: Reduce {
                                                                                                            f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _ , _ | { } }),
                                                                                                            input: Source {
                                                                                                                source: Stream(
                                                                                                                    { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let interval__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; Duration :: from_secs (1) } ; tokio_stream :: wrappers :: IntervalStream :: new (tokio :: time :: interval (interval__free)) },
                                                                                                                ),
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Cluster(
                                                                                                                        2,
                                                                                                                    ),
                                                                                                                    output_type: Some(
                                                                                                                        hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                                    ),
                                                                                                                },
                                                                                                            },
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Tick(
                                                                                                                    0,
                                                                                                                    Cluster(
                                                                                                                        2,
                                                                                                                    ),
                                                                                                                ),
                                                                                                                output_type: Some(
                                                                                                                    hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Tick(
                                                                                                                0,
                                                                                                                Cluster(
                                                                                                                    2,
                                                                                                                ),
                                                                                                            ),
                                                                                                            output_type: Some(
                                                                                                                hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Tick(
                                                                                                            0,
                                                                                                            Cluster(
                                                                                                                2,
                                                                                                            ),
                                                                                                        ),
                                                                                                        output_type: Some(
                                                                                                            usize,
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Tick(
                                                                                                        0,
                                                                                                        Cluster(
                                                                                                            2,
                                                                                                        ),
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        usize,
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Tick(
                                                                                                    0,
                                                                                                    Cluster(
                                                                                                        2,
                                                                                                    ),
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    (),
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        metadata: HydroIrMetadata {
                                                                                            location_kind: Tick(
                                                                                                0,
                                                                                                Cluster(
                                                                                                    2,
                                                                                                ),
                                                                                            ),
                                                                                            output_type: Some(
                                                                                                (usize , ()),
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Tick(
                                                                                            0,
                                                                                            Cluster(
                                                                                                2,
                                                                                            ),
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            usize,
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Tick(
                                                                                        0,
                                                                                        Cluster(
                                                                                            2,
                                                                                        ),
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        (usize , bool),
                                                                                    ),
                                                                                },
                                                                            },
                                                                            second: DeferTick {
                                                                                input: Map {
                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , (usize , bool) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | _ | (0 , true) }),
                                                                                    input: Tee {
                                                                                        inner: <tee>: Reduce {
                                                                                            f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _ , _ | { } }),
                                                                                            input: Source {
                                                                                                source: Stream(
                                                                                                    { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let interval__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; Duration :: from_secs (1) } ; tokio_stream :: wrappers :: IntervalStream :: new (tokio :: time :: interval (interval__free)) },
                                                                                                ),
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Cluster(
                                                                                                        2,
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Tick(
                                                                                                    0,
                                                                                                    Cluster(
                                                                                                        2,
                                                                                                    ),
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        metadata: HydroIrMetadata {
                                                                                            location_kind: Tick(
                                                                                                0,
                                                                                                Cluster(
                                                                                                    2,
                                                                                                ),
                                                                                            ),
                                                                                            output_type: Some(
                                                                                                hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Tick(
                                                                                            0,
                                                                                            Cluster(
                                                                                                2,
                                                                                            ),
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            (usize , bool),
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Tick(
                                                                                        0,
                                                                                        Cluster(
                                                                                            2,
                                                                                        ),
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        (usize , bool),
                                                                                    ),
                                                                                },
                                                                            },
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Tick(
                                                                                    0,
                                                                                    Cluster(
                                                                                        2,
                                                                                    ),
                                                                                ),
                                                                                output_type: Some(
                                                                                    (usize , bool),
                                                                                ),
                                                                            },
                                                                        },
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Tick(
                                                                                0,
                                                                                Cluster(
                                                                                    2,
                                                                                ),
                                                                            ),
                                                                            output_type: Some(
                                                                                (usize , bool),
                                                                            ),
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Cluster(
                                                                            2,
                                                                        ),
                                                                        output_type: Some(
                                                                            (usize , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                                        ),
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Cluster(
                                                                        2,
                                                                    ),
                                                                    output_type: Some(
                                                                        hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
                                                                    ),
                                                                },
                                                            },
                                                            right: Map {
                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | _u | () }),
                                                                input: Reduce {
                                                                    f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _ , _ | { } }),
                                                                    input: Source {
                                                                        source: Stream(
                                                                            { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let interval__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; Duration :: from_millis (1000) } ; tokio_stream :: wrappers :: IntervalStream :: new (tokio :: time :: interval (interval__free)) },
                                                                        ),
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Cluster(
                                                                                2,
                                                                            ),
                                                                            output_type: Some(
                                                                                hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                            ),
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Tick(
                                                                            5,
                                                                            Cluster(
                                                                                2,
                                                                            ),
                                                                        ),
                                                                        output_type: Some(
                                                                            hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                        ),
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Tick(
                                                                        5,
                                                                        Cluster(
                                                                            2,
                                                                        ),
                                                                    ),
                                                                    output_type: Some(
                                                                        (),
                                                                    ),
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Tick(
                                                                    5,
                                                                    Cluster(
                                                                        2,
                                                                    ),
                                                                ),
                                                                output_type: Some(
                                                                    (hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , ()),
                                                                ),
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Tick(
                                                                5,
                                                                Cluster(
                                                                    2,
                                                                ),
                                                            ),
                                                            output_type: Some(
                                                                hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
                                                            ),
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Process(
                                                            3,
                                                        ),
                                                        output_type: Some(
                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                        ),
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Process(
                                                        3,
                                                    ),
                                                    output_type: Some(
                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                    ),
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Process(
                                                    3,
                                                ),
                                                output_type: Some(
                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                ),
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Process(
                                                3,
                                            ),
                                            output_type: Some(
                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                            ),
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Process(
                                            3,
                                        ),
                                        output_type: Some(
                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                        ),
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Process(
                                        3,
                                    ),
                                    output_type: Some(
                                        usize,
                                    ),
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    4,
                                    Process(
                                        3,
                                    ),
                                ),
                                output_type: Some(
                                    (usize , usize),
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                4,
                                Process(
                                    3,
                                ),
                            ),
                            output_type: Some(
                                usize,
                            ),
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            4,
                            Process(
                                3,
                            ),
                        ),
                        output_type: Some(
                            usize,
                        ),
                    },
                },
                right: Map {
                    f: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _u | () }),
                    input: Reduce {
                        f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _ , _ | { } }),
                        input: Source {
                            source: Stream(
                                { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let interval__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; Duration :: from_millis (1000) } ; tokio_stream :: wrappers :: IntervalStream :: new (tokio :: time :: interval (interval__free)) },
                            ),
                            metadata: HydroIrMetadata {
                                location_kind: Process(
                                    3,
                                ),
                                output_type: Some(
                                    hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                6,
                                Process(
                                    3,
                                ),
                            ),
                            output_type: Some(
                                hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                            ),
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            6,
                            Process(
                                3,
                            ),
                        ),
                        output_type: Some(
                            (),
                        ),
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        6,
                        Process(
                            3,
                        ),
                    ),
                    output_type: Some(
                        (usize , ()),
                    ),
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Tick(
                    6,
                    Process(
                        3,
                    ),
                ),
                output_type: Some(
                    usize,
                ),
            },
        },
        op_metadata: HydroIrOpMetadata,
    },
    ForEach {
        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , usize) , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; move | (throughputs , num_client_machines) | { if throughputs . sample_count () >= 2 { let mean = throughputs . sample_mean () * num_client_machines as f64 ; if let Some ((lower , upper)) = throughputs . confidence_interval_99 () { println ! ("Throughput: {:.2} - {:.2} - {:.2} requests/s" , lower * num_client_machines as f64 , mean , upper * num_client_machines as f64) ; } } } }),
        input: Map {
            f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , usize) , ()) , (hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , usize) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | (d , _signal) | d }),
            input: CrossSingleton {
                left: CrossSingleton {
                    left: Map {
                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , ()) , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: optional :: * ; | (d , _signal) | d }),
                        input: CrossSingleton {
                            left: Reduce {
                                f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | combined , new | { combined . add (new) ; } }),
                                input: Map {
                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (_ , v) | v }),
                                    input: Tee {
                                        inner: <tee>: Filter {
                                            f: stageleft :: runtime_support :: fn1_borrow_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) , bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_borrow_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , bool > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | throughputs | throughputs . sample_mean () > 0.0 }) ; { let orig = f__free ; move | (_k , v) | orig (v) } }),
                                            input: ReduceKeyed {
                                                f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | combined , new | { * combined = new ; } }),
                                                input: Persist {
                                                    inner: Network {
                                                        serialize_fn: Some(
                                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                        ),
                                                        instantiate_fn: <network instantiate>,
                                                        deserialize_fn: Some(
                                                            | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage > (& b) . unwrap ()) },
                                                        ),
                                                        input: Map {
                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , ()) , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | (d , _signal) | d }),
                                                            input: CrossSingleton {
                                                                left: Map {
                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (usize , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (_ , stats) | { stats } }),
                                                                    input: Fold {
                                                                        init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | | (0 , { RollingAverage :: new () }) }),
                                                                        acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) , (usize , bool) , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (total , stats) , (batch_size , reset) | { if reset { if * total > 0 { stats . add_sample (* total as f64) ; } * total = 0 ; } else { * total += batch_size ; } } }),
                                                                        input: Persist {
                                                                            inner: Chain {
                                                                                first: Map {
                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < usize , (usize , bool) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | batch_size | (batch_size , false) }),
                                                                                    input: Map {
                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (usize , ()) , usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | (d , _signal) | d }),
                                                                                        input: CrossSingleton {
                                                                                            left: Fold {
                                                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | 0usize }),
                                                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < usize , (u32 , core :: option :: Option < u32 >) , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | count , _ | * count += 1 }),
                                                                                                input: Tee {
                                                                                                    inner: <tee>: Map {
                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , (u32 , core :: option :: Option < u32 >) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (virtual_id , payload) | (virtual_id , Some (payload)) }),
                                                                                                        input: Network {
                                                                                                            serialize_fn: Some(
                                                                                                                :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (u32 , u32)) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                            ),
                                                                                                            instantiate_fn: <network instantiate>,
                                                                                                            deserialize_fn: Some(
                                                                                                                | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& res . unwrap ()) . unwrap () },
                                                                                                            ),
                                                                                                            input: Tee {
                                                                                                                inner: <tee>: FilterMap {
                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                                                                                                                    input: Tee {
                                                                                                                        inner: <tee>: FoldKeyed {
                                                                                                                            init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                                                                                                                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                                                                                                                            input: Tee {
                                                                                                                                inner: <tee>: Chain {
                                                                                                                                    first: DeferTick {
                                                                                                                                        input: CycleSource {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: cycle_2,
                                                                                                                                            },
                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                location_kind: Tick(
                                                                                                                                                    2,
                                                                                                                                                    Process(
                                                                                                                                                        0,
                                                                                                                                                    ),
                                                                                                                                                ),
                                                                                                                                                output_type: Some(
                                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                ),
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                            location_kind: Tick(
                                                                                                                                                2,
                                                                                                                                                Process(
                                                                                                                                                    0,
                                                                                                                                                ),
                                                                                                                                            ),
                                                                                                                                            output_type: Some(
                                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                            ),
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    second: Tee {
                                                                                                                                        inner: <tee>: Map {
                                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                                                                                                                            input: Map {
                                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                                                                                                                input: Map {
                                                                                                                                                    f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                                                                                                                    input: Network {
                                                                                                                                                        serialize_fn: Some(
                                                                                                                                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                                        ),
                                                                                                                                                        instantiate_fn: <network instantiate>,
                                                                                                                                                        deserialize_fn: Some(
                                                                                                                                                            | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                                                                                                                        ),
                                                                                                                                                        input: Network {
                                                                                                                                                            serialize_fn: Some(
                                                                                                                                                                :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                                                                            ),
                                                                                                                                                            instantiate_fn: <network instantiate>,
                                                                                                                                                            deserialize_fn: Some(
                                                                                                                                                                | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                                                                                                                            ),
                                                                                                                                                            input: Map {
                                                                                                                                                                f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                                                                                                                input: CrossProduct {
                                                                                                                                                                    left: Map {
                                                                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                                                                                                                        input: FilterMap {
                                                                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                                                                                                                            input: FoldKeyed {
                                                                                                                                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                                                                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                                                                                                                input: Persist {
                                                                                                                                                                                    inner: Map {
                                                                                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                                                                                                                        input: Source {
                                                                                                                                                                                            source: Iter(
                                                                                                                                                                                                { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                                                                                                                            ),
                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                                    0,
                                                                                                                                                                                                ),
                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                    & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                                ),
                                                                                                                                                                                            },
                                                                                                                                                                                        },
                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                                0,
                                                                                                                                                                                            ),
                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                            ),
                                                                                                                                                                                        },
                                                                                                                                                                                    },
                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                            0,
                                                                                                                                                                                        ),
                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                        ),
                                                                                                                                                                                    },
                                                                                                                                                                                },
                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                                        0,
                                                                                                                                                                                    ),
                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                                                                                                                    ),
                                                                                                                                                                                },
                                                                                                                                                                            },
                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                    0,
                                                                                                                                                                                ),
                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                                                                                                                ),
                                                                                                                                                                            },
                                                                                                                                                                        },
                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                3,
                                                                                                                                                                                Process(
                                                                                                                                                                                    0,
                                                                                                                                                                                ),
                                                                                                                                                                            ),
                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                            ),
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    right: Tee {
                                                                                                                                                                        inner: <tee>: FilterMap {
                                                                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                                                                                                                                                                            input: Tee {
                                                                                                                                                                                inner: <tee>: FoldKeyed {
                                                                                                                                                                                    init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                                                                                                                                                                                    acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                                                                                                                                                                                    input: Tee {
                                                                                                                                                                                        inner: <tee>: Chain {
                                                                                                                                                                                            first: DeferTick {
                                                                                                                                                                                                input: CycleSource {
                                                                                                                                                                                                    ident: Ident {
                                                                                                                                                                                                        sym: cycle_1,
                                                                                                                                                                                                    },
                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                        location_kind: Tick(
                                                                                                                                                                                                            2,
                                                                                                                                                                                                            Process(
                                                                                                                                                                                                                0,
                                                                                                                                                                                                            ),
                                                                                                                                                                                                        ),
                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                        ),
                                                                                                                                                                                                    },
                                                                                                                                                                                                },
                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                                                        2,
                                                                                                                                                                                                        Process(
                                                                                                                                                                                                            0,
                                                                                                                                                                                                        ),
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                    ),
                                                                                                                                                                                                },
                                                                                                                                                                                            },
                                                                                                                                                                                            second: Tee {
                                                                                                                                                                                                inner: <tee>: Map {
                                                                                                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                                                                                                                                                                                    input: Map {
                                                                                                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                                                                                                                                                                        input: Map {
                                                                                                                                                                                                            f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                                                                                                                                                                            input: Network {
                                                                                                                                                                                                                serialize_fn: Some(
                                                                                                                                                                                                                    :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                                                                                                ),
                                                                                                                                                                                                                instantiate_fn: <network instantiate>,
                                                                                                                                                                                                                deserialize_fn: Some(
                                                                                                                                                                                                                    | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                                                                                                                                                                                ),
                                                                                                                                                                                                                input: Network {
                                                                                                                                                                                                                    serialize_fn: Some(
                                                                                                                                                                                                                        :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                    instantiate_fn: <network instantiate>,
                                                                                                                                                                                                                    deserialize_fn: Some(
                                                                                                                                                                                                                        | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                    input: Map {
                                                                                                                                                                                                                        f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                                                                                                                                                                        input: CrossProduct {
                                                                                                                                                                                                                            left: Map {
                                                                                                                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                                                                                                                                                                                input: FilterMap {
                                                                                                                                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                                                                                                                                                                                    input: FoldKeyed {
                                                                                                                                                                                                                                        init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                                                                                                                                                                        acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                                                                                                                                                                        input: Persist {
                                                                                                                                                                                                                                            inner: Map {
                                                                                                                                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                                                                                                                                                                                input: Source {
                                                                                                                                                                                                                                                    source: Iter(
                                                                                                                                                                                                                                                        { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                                                                                            0,
                                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                                                                            & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                                                                                                        0,
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                                                                                0,
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                                                                            0,
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                                                                                        1,
                                                                                                                                                                                                                                        Process(
                                                                                                                                                                                                                                            0,
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                                                        hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            right: Network {
                                                                                                                                                                                                                                serialize_fn: Some(
                                                                                                                                                                                                                                    :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                instantiate_fn: <network instantiate>,
                                                                                                                                                                                                                                deserialize_fn: Some(
                                                                                                                                                                                                                                    | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& b) . unwrap ()) },
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                input: CycleSource {
                                                                                                                                                                                                                                    ident: Ident {
                                                                                                                                                                                                                                        sym: cycle_0,
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                                                        location_kind: Cluster(
                                                                                                                                                                                                                                            2,
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                                                            (u32 , u32),
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                                                                                        0,
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                                                                                    1,
                                                                                                                                                                                                                                    Process(
                                                                                                                                                                                                                                        0,
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                                                                1,
                                                                                                                                                                                                                                Process(
                                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                                        location_kind: Cluster(
                                                                                                                                                                                                                            1,
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                },
                                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                                                                        0,
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                },
                                                                                                                                                                                                            },
                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                ),
                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                                ),
                                                                                                                                                                                                            },
                                                                                                                                                                                                        },
                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                                                0,
                                                                                                                                                                                                            ),
                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                                            ),
                                                                                                                                                                                                        },
                                                                                                                                                                                                    },
                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                                            0,
                                                                                                                                                                                                        ),
                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                        ),
                                                                                                                                                                                                    },
                                                                                                                                                                                                },
                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                                                        2,
                                                                                                                                                                                                        Process(
                                                                                                                                                                                                            0,
                                                                                                                                                                                                        ),
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                    ),
                                                                                                                                                                                                },
                                                                                                                                                                                            },
                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                                                    2,
                                                                                                                                                                                                    Process(
                                                                                                                                                                                                        0,
                                                                                                                                                                                                    ),
                                                                                                                                                                                                ),
                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                ),
                                                                                                                                                                                            },
                                                                                                                                                                                        },
                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                                2,
                                                                                                                                                                                                Process(
                                                                                                                                                                                                    0,
                                                                                                                                                                                                ),
                                                                                                                                                                                            ),
                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                            ),
                                                                                                                                                                                        },
                                                                                                                                                                                    },
                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                        location_kind: Tick(
                                                                                                                                                                                            2,
                                                                                                                                                                                            Process(
                                                                                                                                                                                                0,
                                                                                                                                                                                            ),
                                                                                                                                                                                        ),
                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                                                                                        ),
                                                                                                                                                                                    },
                                                                                                                                                                                },
                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                                        2,
                                                                                                                                                                                        Process(
                                                                                                                                                                                            0,
                                                                                                                                                                                        ),
                                                                                                                                                                                    ),
                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                                                                                    ),
                                                                                                                                                                                },
                                                                                                                                                                            },
                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                                    2,
                                                                                                                                                                                    Process(
                                                                                                                                                                                        0,
                                                                                                                                                                                    ),
                                                                                                                                                                                ),
                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                ),
                                                                                                                                                                            },
                                                                                                                                                                        },
                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                2,
                                                                                                                                                                                Process(
                                                                                                                                                                                    0,
                                                                                                                                                                                ),
                                                                                                                                                                            ),
                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                            ),
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                        location_kind: Tick(
                                                                                                                                                                            3,
                                                                                                                                                                            Process(
                                                                                                                                                                                0,
                                                                                                                                                                            ),
                                                                                                                                                                        ),
                                                                                                                                                                        output_type: Some(
                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                        ),
                                                                                                                                                                    },
                                                                                                                                                                },
                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                        3,
                                                                                                                                                                        Process(
                                                                                                                                                                            0,
                                                                                                                                                                        ),
                                                                                                                                                                    ),
                                                                                                                                                                    output_type: Some(
                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                    ),
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                location_kind: Cluster(
                                                                                                                                                                    1,
                                                                                                                                                                ),
                                                                                                                                                                output_type: Some(
                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                ),
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                            location_kind: Process(
                                                                                                                                                                0,
                                                                                                                                                            ),
                                                                                                                                                            output_type: Some(
                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                            ),
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                        location_kind: Process(
                                                                                                                                                            0,
                                                                                                                                                        ),
                                                                                                                                                        output_type: Some(
                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                        ),
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                    location_kind: Process(
                                                                                                                                                        0,
                                                                                                                                                    ),
                                                                                                                                                    output_type: Some(
                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                    ),
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                location_kind: Process(
                                                                                                                                                    0,
                                                                                                                                                ),
                                                                                                                                                output_type: Some(
                                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                ),
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                            location_kind: Tick(
                                                                                                                                                2,
                                                                                                                                                Process(
                                                                                                                                                    0,
                                                                                                                                                ),
                                                                                                                                            ),
                                                                                                                                            output_type: Some(
                                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                            ),
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                        location_kind: Tick(
                                                                                                                                            2,
                                                                                                                                            Process(
                                                                                                                                                0,
                                                                                                                                            ),
                                                                                                                                        ),
                                                                                                                                        output_type: Some(
                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                    location_kind: Tick(
                                                                                                                                        2,
                                                                                                                                        Process(
                                                                                                                                            0,
                                                                                                                                        ),
                                                                                                                                    ),
                                                                                                                                    output_type: Some(
                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                            },
                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                location_kind: Tick(
                                                                                                                                    2,
                                                                                                                                    Process(
                                                                                                                                        0,
                                                                                                                                    ),
                                                                                                                                ),
                                                                                                                                output_type: Some(
                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        },
                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                            location_kind: Tick(
                                                                                                                                2,
                                                                                                                                Process(
                                                                                                                                    0,
                                                                                                                                ),
                                                                                                                            ),
                                                                                                                            output_type: Some(
                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    },
                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                        location_kind: Tick(
                                                                                                                            2,
                                                                                                                            Process(
                                                                                                                                0,
                                                                                                                            ),
                                                                                                                        ),
                                                                                                                        output_type: Some(
                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                        ),
                                                                                                                    },
                                                                                                                },
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Tick(
                                                                                                                        2,
                                                                                                                        Process(
                                                                                                                            0,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                    output_type: Some(
                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                    ),
                                                                                                                },
                                                                                                            },
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Cluster(
                                                                                                                    2,
                                                                                                                ),
                                                                                                                output_type: Some(
                                                                                                                    (u32 , u32),
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Tick(
                                                                                                                0,
                                                                                                                Cluster(
                                                                                                                    2,
                                                                                                                ),
                                                                                                            ),
                                                                                                            output_type: Some(
                                                                                                                (u32 , core :: option :: Option < u32 >),
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Tick(
                                                                                                            0,
                                                                                                            Cluster(
                                                                                                                2,
                                                                                                            ),
                                                                                                        ),
                                                                                                        output_type: Some(
                                                                                                            (u32 , core :: option :: Option < u32 >),
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Tick(
                                                                                                        0,
                                                                                                        Cluster(
                                                                                                            2,
                                                                                                        ),
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        usize,
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            right: Map {
                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < usize , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | _u | () }),
                                                                                                input: Filter {
                                                                                                    f: stageleft :: runtime_support :: fn1_borrow_type_hint :: < usize , bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | c | * c == 0 }),
                                                                                                    input: Fold {
                                                                                                        init: stageleft :: runtime_support :: fn0_type_hint :: < usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | 0usize }),
                                                                                                        acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < usize , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | count , _ | * count += 1 }),
                                                                                                        input: Tee {
                                                                                                            inner: <tee>: Reduce {
                                                                                                                f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _ , _ | { } }),
                                                                                                                input: Source {
                                                                                                                    source: Stream(
                                                                                                                        { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let interval__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; Duration :: from_secs (1) } ; tokio_stream :: wrappers :: IntervalStream :: new (tokio :: time :: interval (interval__free)) },
                                                                                                                    ),
                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                        location_kind: Cluster(
                                                                                                                            2,
                                                                                                                        ),
                                                                                                                        output_type: Some(
                                                                                                                            hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                                        ),
                                                                                                                    },
                                                                                                                },
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Tick(
                                                                                                                        0,
                                                                                                                        Cluster(
                                                                                                                            2,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                    output_type: Some(
                                                                                                                        hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                                    ),
                                                                                                                },
                                                                                                            },
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Tick(
                                                                                                                    0,
                                                                                                                    Cluster(
                                                                                                                        2,
                                                                                                                    ),
                                                                                                                ),
                                                                                                                output_type: Some(
                                                                                                                    hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Tick(
                                                                                                                0,
                                                                                                                Cluster(
                                                                                                                    2,
                                                                                                                ),
                                                                                                            ),
                                                                                                            output_type: Some(
                                                                                                                usize,
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Tick(
                                                                                                            0,
                                                                                                            Cluster(
                                                                                                                2,
                                                                                                            ),
                                                                                                        ),
                                                                                                        output_type: Some(
                                                                                                            usize,
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Tick(
                                                                                                        0,
                                                                                                        Cluster(
                                                                                                            2,
                                                                                                        ),
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        (),
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Tick(
                                                                                                    0,
                                                                                                    Cluster(
                                                                                                        2,
                                                                                                    ),
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    (usize , ()),
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        metadata: HydroIrMetadata {
                                                                                            location_kind: Tick(
                                                                                                0,
                                                                                                Cluster(
                                                                                                    2,
                                                                                                ),
                                                                                            ),
                                                                                            output_type: Some(
                                                                                                usize,
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Tick(
                                                                                            0,
                                                                                            Cluster(
                                                                                                2,
                                                                                            ),
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            (usize , bool),
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                second: DeferTick {
                                                                                    input: Map {
                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , (usize , bool) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | _ | (0 , true) }),
                                                                                        input: Tee {
                                                                                            inner: <tee>: Reduce {
                                                                                                f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _ , _ | { } }),
                                                                                                input: Source {
                                                                                                    source: Stream(
                                                                                                        { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let interval__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; Duration :: from_secs (1) } ; tokio_stream :: wrappers :: IntervalStream :: new (tokio :: time :: interval (interval__free)) },
                                                                                                    ),
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Cluster(
                                                                                                            2,
                                                                                                        ),
                                                                                                        output_type: Some(
                                                                                                            hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Tick(
                                                                                                        0,
                                                                                                        Cluster(
                                                                                                            2,
                                                                                                        ),
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Tick(
                                                                                                    0,
                                                                                                    Cluster(
                                                                                                        2,
                                                                                                    ),
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        metadata: HydroIrMetadata {
                                                                                            location_kind: Tick(
                                                                                                0,
                                                                                                Cluster(
                                                                                                    2,
                                                                                                ),
                                                                                            ),
                                                                                            output_type: Some(
                                                                                                (usize , bool),
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Tick(
                                                                                            0,
                                                                                            Cluster(
                                                                                                2,
                                                                                            ),
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            (usize , bool),
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Tick(
                                                                                        0,
                                                                                        Cluster(
                                                                                            2,
                                                                                        ),
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        (usize , bool),
                                                                                    ),
                                                                                },
                                                                            },
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Tick(
                                                                                    0,
                                                                                    Cluster(
                                                                                        2,
                                                                                    ),
                                                                                ),
                                                                                output_type: Some(
                                                                                    (usize , bool),
                                                                                ),
                                                                            },
                                                                        },
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Cluster(
                                                                                2,
                                                                            ),
                                                                            output_type: Some(
                                                                                (usize , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                                            ),
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Cluster(
                                                                            2,
                                                                        ),
                                                                        output_type: Some(
                                                                            hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
                                                                        ),
                                                                    },
                                                                },
                                                                right: Map {
                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | _u | () }),
                                                                    input: Reduce {
                                                                        f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _ , _ | { } }),
                                                                        input: Source {
                                                                            source: Stream(
                                                                                { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let interval__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; Duration :: from_millis (1000) } ; tokio_stream :: wrappers :: IntervalStream :: new (tokio :: time :: interval (interval__free)) },
                                                                            ),
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Cluster(
                                                                                    2,
                                                                                ),
                                                                                output_type: Some(
                                                                                    hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                ),
                                                                            },
                                                                        },
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Tick(
                                                                                5,
                                                                                Cluster(
                                                                                    2,
                                                                                ),
                                                                            ),
                                                                            output_type: Some(
                                                                                hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                            ),
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Tick(
                                                                            5,
                                                                            Cluster(
                                                                                2,
                                                                            ),
                                                                        ),
                                                                        output_type: Some(
                                                                            (),
                                                                        ),
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Tick(
                                                                        5,
                                                                        Cluster(
                                                                            2,
                                                                        ),
                                                                    ),
                                                                    output_type: Some(
                                                                        (hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , ()),
                                                                    ),
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Tick(
                                                                    5,
                                                                    Cluster(
                                                                        2,
                                                                    ),
                                                                ),
                                                                output_type: Some(
                                                                    hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
                                                                ),
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Process(
                                                                3,
                                                            ),
                                                            output_type: Some(
                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                            ),
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Process(
                                                            3,
                                                        ),
                                                        output_type: Some(
                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                        ),
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Process(
                                                        3,
                                                    ),
                                                    output_type: Some(
                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                    ),
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Process(
                                                    3,
                                                ),
                                                output_type: Some(
                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                ),
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Process(
                                                3,
                                            ),
                                            output_type: Some(
                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                            ),
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Tick(
                                            7,
                                            Process(
                                                3,
                                            ),
                                        ),
                                        output_type: Some(
                                            hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
                                        ),
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        7,
                                        Process(
                                            3,
                                        ),
                                    ),
                                    output_type: Some(
                                        hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
                                    ),
                                },
                            },
                            right: Map {
                                f: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: optional :: * ; | _u | () }),
                                input: Reduce {
                                    f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _ , _ | { } }),
                                    input: Source {
                                        source: Stream(
                                            { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let interval__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; Duration :: from_millis (1000) } ; tokio_stream :: wrappers :: IntervalStream :: new (tokio :: time :: interval (interval__free)) },
                                        ),
                                        metadata: HydroIrMetadata {
                                            location_kind: Process(
                                                3,
                                            ),
                                            output_type: Some(
                                                hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                            ),
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Tick(
                                            8,
                                            Process(
                                                3,
                                            ),
                                        ),
                                        output_type: Some(
                                            hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                        ),
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        8,
                                        Process(
                                            3,
                                        ),
                                    ),
                                    output_type: Some(
                                        (),
                                    ),
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    8,
                                    Process(
                                        3,
                                    ),
                                ),
                                output_type: Some(
                                    (hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , ()),
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                8,
                                Process(
                                    3,
                                ),
                            ),
                            output_type: Some(
                                hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
                            ),
                        },
                    },
                    right: Tee {
                        inner: <tee>: Fold {
                            init: stageleft :: runtime_support :: fn0_type_hint :: < usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | 0usize }),
                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < usize , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , ()) , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | count , _ | * count += 1 }),
                            input: FilterMap {
                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: membership :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                input: FoldKeyed {
                                    init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: membership :: * ; | | false }),
                                    acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: membership :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                    input: Persist {
                                        inner: Map {
                                            f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                            input: Source {
                                                source: Iter(
                                                    { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client >] > (__hydro_lang_cluster_ids_2) } ; underlying_memberids__free },
                                                ),
                                                metadata: HydroIrMetadata {
                                                    location_kind: Process(
                                                        3,
                                                    ),
                                                    output_type: Some(
                                                        & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client >,
                                                    ),
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Process(
                                                    3,
                                                ),
                                                output_type: Some(
                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                ),
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Process(
                                                3,
                                            ),
                                            output_type: Some(
                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                            ),
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Process(
                                            3,
                                        ),
                                        output_type: Some(
                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , bool),
                                        ),
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Process(
                                        3,
                                    ),
                                    output_type: Some(
                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , ()),
                                    ),
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Process(
                                    3,
                                ),
                                output_type: Some(
                                    usize,
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                4,
                                Process(
                                    3,
                                ),
                            ),
                            output_type: Some(
                                usize,
                            ),
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            4,
                            Process(
                                3,
                            ),
                        ),
                        output_type: Some(
                            (hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , usize),
                        ),
                    },
                },
                right: Map {
                    f: stageleft :: runtime_support :: fn1_type_hint :: < usize , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _u | () }),
                    input: Filter {
                        f: stageleft :: runtime_support :: fn1_borrow_type_hint :: < usize , bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | c | * c == 0 }),
                        input: Fold {
                            init: stageleft :: runtime_support :: fn0_type_hint :: < usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | 0usize }),
                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < usize , usize , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | count , _ | * count += 1 }),
                            input: Tee {
                                inner: <tee>: FilterMap {
                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (usize , usize) , core :: option :: Option < usize > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (num_clients , num_clients_with_throughput) | { if num_clients > num_clients_with_throughput { Some (num_clients - num_clients_with_throughput) } else { None } } }),
                                    input: CrossSingleton {
                                        left: Tee {
                                            inner: <tee>: Fold {
                                                init: stageleft :: runtime_support :: fn0_type_hint :: < usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | 0usize }),
                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < usize , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , ()) , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | count , _ | * count += 1 }),
                                                input: FilterMap {
                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: membership :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                    input: FoldKeyed {
                                                        init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: membership :: * ; | | false }),
                                                        acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: membership :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                        input: Persist {
                                                            inner: Map {
                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                input: Source {
                                                                    source: Iter(
                                                                        { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client >] > (__hydro_lang_cluster_ids_2) } ; underlying_memberids__free },
                                                                    ),
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Process(
                                                                            3,
                                                                        ),
                                                                        output_type: Some(
                                                                            & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client >,
                                                                        ),
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Process(
                                                                        3,
                                                                    ),
                                                                    output_type: Some(
                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                    ),
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Process(
                                                                    3,
                                                                ),
                                                                output_type: Some(
                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                ),
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Process(
                                                                3,
                                                            ),
                                                            output_type: Some(
                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , bool),
                                                            ),
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Process(
                                                            3,
                                                        ),
                                                        output_type: Some(
                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , ()),
                                                        ),
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Process(
                                                        3,
                                                    ),
                                                    output_type: Some(
                                                        usize,
                                                    ),
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Tick(
                                                    4,
                                                    Process(
                                                        3,
                                                    ),
                                                ),
                                                output_type: Some(
                                                    usize,
                                                ),
                                            },
                                        },
                                        right: Fold {
                                            init: stageleft :: runtime_support :: fn0_type_hint :: < usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | 0usize }),
                                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < usize , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | count , _ | * count += 1 }),
                                            input: Tee {
                                                inner: <tee>: Filter {
                                                    f: stageleft :: runtime_support :: fn1_borrow_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) , bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_borrow_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , bool > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | throughputs | throughputs . sample_mean () > 0.0 }) ; { let orig = f__free ; move | (_k , v) | orig (v) } }),
                                                    input: ReduceKeyed {
                                                        f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | combined , new | { * combined = new ; } }),
                                                        input: Persist {
                                                            inner: Network {
                                                                serialize_fn: Some(
                                                                    :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                ),
                                                                instantiate_fn: <network instantiate>,
                                                                deserialize_fn: Some(
                                                                    | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage > (& b) . unwrap ()) },
                                                                ),
                                                                input: Map {
                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , ()) , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | (d , _signal) | d }),
                                                                    input: CrossSingleton {
                                                                        left: Map {
                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (usize , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (_ , stats) | { stats } }),
                                                                            input: Fold {
                                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | | (0 , { RollingAverage :: new () }) }),
                                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) , (usize , bool) , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (total , stats) , (batch_size , reset) | { if reset { if * total > 0 { stats . add_sample (* total as f64) ; } * total = 0 ; } else { * total += batch_size ; } } }),
                                                                                input: Persist {
                                                                                    inner: Chain {
                                                                                        first: Map {
                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < usize , (usize , bool) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | batch_size | (batch_size , false) }),
                                                                                            input: Map {
                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (usize , ()) , usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | (d , _signal) | d }),
                                                                                                input: CrossSingleton {
                                                                                                    left: Fold {
                                                                                                        init: stageleft :: runtime_support :: fn0_type_hint :: < usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | 0usize }),
                                                                                                        acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < usize , (u32 , core :: option :: Option < u32 >) , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | count , _ | * count += 1 }),
                                                                                                        input: Tee {
                                                                                                            inner: <tee>: Map {
                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , (u32 , core :: option :: Option < u32 >) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (virtual_id , payload) | (virtual_id , Some (payload)) }),
                                                                                                                input: Network {
                                                                                                                    serialize_fn: Some(
                                                                                                                        :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (u32 , u32)) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                                    ),
                                                                                                                    instantiate_fn: <network instantiate>,
                                                                                                                    deserialize_fn: Some(
                                                                                                                        | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& res . unwrap ()) . unwrap () },
                                                                                                                    ),
                                                                                                                    input: Tee {
                                                                                                                        inner: <tee>: FilterMap {
                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                                                                                                                            input: Tee {
                                                                                                                                inner: <tee>: FoldKeyed {
                                                                                                                                    init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                                                                                                                                    acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                                                                                                                                    input: Tee {
                                                                                                                                        inner: <tee>: Chain {
                                                                                                                                            first: DeferTick {
                                                                                                                                                input: CycleSource {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: cycle_2,
                                                                                                                                                    },
                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                        location_kind: Tick(
                                                                                                                                                            2,
                                                                                                                                                            Process(
                                                                                                                                                                0,
                                                                                                                                                            ),
                                                                                                                                                        ),
                                                                                                                                                        output_type: Some(
                                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                        ),
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                    location_kind: Tick(
                                                                                                                                                        2,
                                                                                                                                                        Process(
                                                                                                                                                            0,
                                                                                                                                                        ),
                                                                                                                                                    ),
                                                                                                                                                    output_type: Some(
                                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                    ),
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            second: Tee {
                                                                                                                                                inner: <tee>: Map {
                                                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                                                                                                                                    input: Map {
                                                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                                                                                                                        input: Map {
                                                                                                                                                            f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                                                                                                                            input: Network {
                                                                                                                                                                serialize_fn: Some(
                                                                                                                                                                    :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                                                ),
                                                                                                                                                                instantiate_fn: <network instantiate>,
                                                                                                                                                                deserialize_fn: Some(
                                                                                                                                                                    | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                                                                                                                                ),
                                                                                                                                                                input: Network {
                                                                                                                                                                    serialize_fn: Some(
                                                                                                                                                                        :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                                                                                    ),
                                                                                                                                                                    instantiate_fn: <network instantiate>,
                                                                                                                                                                    deserialize_fn: Some(
                                                                                                                                                                        | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                                                                                                                                    ),
                                                                                                                                                                    input: Map {
                                                                                                                                                                        f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                                                                                                                        input: CrossProduct {
                                                                                                                                                                            left: Map {
                                                                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                                                                                                                                input: FilterMap {
                                                                                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                                                                                                                                    input: FoldKeyed {
                                                                                                                                                                                        init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                                                                                                                        acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                                                                                                                        input: Persist {
                                                                                                                                                                                            inner: Map {
                                                                                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                                                                                                                                input: Source {
                                                                                                                                                                                                    source: Iter(
                                                                                                                                                                                                        { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                                            0,
                                                                                                                                                                                                        ),
                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                            & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                                        ),
                                                                                                                                                                                                    },
                                                                                                                                                                                                },
                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                                                        0,
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                                    ),
                                                                                                                                                                                                },
                                                                                                                                                                                            },
                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                                    0,
                                                                                                                                                                                                ),
                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                                ),
                                                                                                                                                                                            },
                                                                                                                                                                                        },
                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                                0,
                                                                                                                                                                                            ),
                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                                                                                                                            ),
                                                                                                                                                                                        },
                                                                                                                                                                                    },
                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                            0,
                                                                                                                                                                                        ),
                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                                                                                                                        ),
                                                                                                                                                                                    },
                                                                                                                                                                                },
                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                                        3,
                                                                                                                                                                                        Process(
                                                                                                                                                                                            0,
                                                                                                                                                                                        ),
                                                                                                                                                                                    ),
                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                        hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                    ),
                                                                                                                                                                                },
                                                                                                                                                                            },
                                                                                                                                                                            right: Tee {
                                                                                                                                                                                inner: <tee>: FilterMap {
                                                                                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                                                                                                                                                                                    input: Tee {
                                                                                                                                                                                        inner: <tee>: FoldKeyed {
                                                                                                                                                                                            init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                                                                                                                                                                                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                                                                                                                                                                                            input: Tee {
                                                                                                                                                                                                inner: <tee>: Chain {
                                                                                                                                                                                                    first: DeferTick {
                                                                                                                                                                                                        input: CycleSource {
                                                                                                                                                                                                            ident: Ident {
                                                                                                                                                                                                                sym: cycle_1,
                                                                                                                                                                                                            },
                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                                                                    2,
                                                                                                                                                                                                                    Process(
                                                                                                                                                                                                                        0,
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                ),
                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                                ),
                                                                                                                                                                                                            },
                                                                                                                                                                                                        },
                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                                                2,
                                                                                                                                                                                                                Process(
                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                ),
                                                                                                                                                                                                            ),
                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                            ),
                                                                                                                                                                                                        },
                                                                                                                                                                                                    },
                                                                                                                                                                                                    second: Tee {
                                                                                                                                                                                                        inner: <tee>: Map {
                                                                                                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                                                                                                                                                                                            input: Map {
                                                                                                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                                                                                                                                                                                input: Map {
                                                                                                                                                                                                                    f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                                                                                                                                                                                    input: Network {
                                                                                                                                                                                                                        serialize_fn: Some(
                                                                                                                                                                                                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                        instantiate_fn: <network instantiate>,
                                                                                                                                                                                                                        deserialize_fn: Some(
                                                                                                                                                                                                                            | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                        input: Network {
                                                                                                                                                                                                                            serialize_fn: Some(
                                                                                                                                                                                                                                :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                            instantiate_fn: <network instantiate>,
                                                                                                                                                                                                                            deserialize_fn: Some(
                                                                                                                                                                                                                                | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                            input: Map {
                                                                                                                                                                                                                                f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                                                                                                                                                                                input: CrossProduct {
                                                                                                                                                                                                                                    left: Map {
                                                                                                                                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                                                                                                                                                                                        input: FilterMap {
                                                                                                                                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                                                                                                                                                                                            input: FoldKeyed {
                                                                                                                                                                                                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                                                                                                                                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                                                                                                                                                                                input: Persist {
                                                                                                                                                                                                                                                    inner: Map {
                                                                                                                                                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                                                                                                                                                                                        input: Source {
                                                                                                                                                                                                                                                            source: Iter(
                                                                                                                                                                                                                                                                { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                                                                    & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                                                                                                0,
                                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                                                                                            0,
                                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                                                                                                        0,
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                                                                                1,
                                                                                                                                                                                                                                                Process(
                                                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                                                hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    right: Network {
                                                                                                                                                                                                                                        serialize_fn: Some(
                                                                                                                                                                                                                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        instantiate_fn: <network instantiate>,
                                                                                                                                                                                                                                        deserialize_fn: Some(
                                                                                                                                                                                                                                            | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& b) . unwrap ()) },
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        input: CycleSource {
                                                                                                                                                                                                                                            ident: Ident {
                                                                                                                                                                                                                                                sym: cycle_0,
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                                                location_kind: Cluster(
                                                                                                                                                                                                                                                    2,
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                                                    (u32 , u32),
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                                                                                0,
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                                                        location_kind: Tick(
                                                                                                                                                                                                                                            1,
                                                                                                                                                                                                                                            Process(
                                                                                                                                                                                                                                                0,
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                                                                                        1,
                                                                                                                                                                                                                                        Process(
                                                                                                                                                                                                                                            0,
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                                location_kind: Cluster(
                                                                                                                                                                                                                                    1,
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                                                                0,
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                                                            0,
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                },
                                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                                                                        0,
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                },
                                                                                                                                                                                                            },
                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                ),
                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                                ),
                                                                                                                                                                                                            },
                                                                                                                                                                                                        },
                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                                                2,
                                                                                                                                                                                                                Process(
                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                ),
                                                                                                                                                                                                            ),
                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                            ),
                                                                                                                                                                                                        },
                                                                                                                                                                                                    },
                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                        location_kind: Tick(
                                                                                                                                                                                                            2,
                                                                                                                                                                                                            Process(
                                                                                                                                                                                                                0,
                                                                                                                                                                                                            ),
                                                                                                                                                                                                        ),
                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                        ),
                                                                                                                                                                                                    },
                                                                                                                                                                                                },
                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                                                        2,
                                                                                                                                                                                                        Process(
                                                                                                                                                                                                            0,
                                                                                                                                                                                                        ),
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                    ),
                                                                                                                                                                                                },
                                                                                                                                                                                            },
                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                                                    2,
                                                                                                                                                                                                    Process(
                                                                                                                                                                                                        0,
                                                                                                                                                                                                    ),
                                                                                                                                                                                                ),
                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                                                                                                ),
                                                                                                                                                                                            },
                                                                                                                                                                                        },
                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                                2,
                                                                                                                                                                                                Process(
                                                                                                                                                                                                    0,
                                                                                                                                                                                                ),
                                                                                                                                                                                            ),
                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                                                                                            ),
                                                                                                                                                                                        },
                                                                                                                                                                                    },
                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                        location_kind: Tick(
                                                                                                                                                                                            2,
                                                                                                                                                                                            Process(
                                                                                                                                                                                                0,
                                                                                                                                                                                            ),
                                                                                                                                                                                        ),
                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                        ),
                                                                                                                                                                                    },
                                                                                                                                                                                },
                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                                        2,
                                                                                                                                                                                        Process(
                                                                                                                                                                                            0,
                                                                                                                                                                                        ),
                                                                                                                                                                                    ),
                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                    ),
                                                                                                                                                                                },
                                                                                                                                                                            },
                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                                    3,
                                                                                                                                                                                    Process(
                                                                                                                                                                                        0,
                                                                                                                                                                                    ),
                                                                                                                                                                                ),
                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                ),
                                                                                                                                                                            },
                                                                                                                                                                        },
                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                3,
                                                                                                                                                                                Process(
                                                                                                                                                                                    0,
                                                                                                                                                                                ),
                                                                                                                                                                            ),
                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                            ),
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                        location_kind: Cluster(
                                                                                                                                                                            1,
                                                                                                                                                                        ),
                                                                                                                                                                        output_type: Some(
                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                        ),
                                                                                                                                                                    },
                                                                                                                                                                },
                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                        0,
                                                                                                                                                                    ),
                                                                                                                                                                    output_type: Some(
                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                    ),
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                location_kind: Process(
                                                                                                                                                                    0,
                                                                                                                                                                ),
                                                                                                                                                                output_type: Some(
                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                ),
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                            location_kind: Process(
                                                                                                                                                                0,
                                                                                                                                                            ),
                                                                                                                                                            output_type: Some(
                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                            ),
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                        location_kind: Process(
                                                                                                                                                            0,
                                                                                                                                                        ),
                                                                                                                                                        output_type: Some(
                                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                        ),
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                    location_kind: Tick(
                                                                                                                                                        2,
                                                                                                                                                        Process(
                                                                                                                                                            0,
                                                                                                                                                        ),
                                                                                                                                                    ),
                                                                                                                                                    output_type: Some(
                                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                    ),
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                location_kind: Tick(
                                                                                                                                                    2,
                                                                                                                                                    Process(
                                                                                                                                                        0,
                                                                                                                                                    ),
                                                                                                                                                ),
                                                                                                                                                output_type: Some(
                                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                ),
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                            location_kind: Tick(
                                                                                                                                                2,
                                                                                                                                                Process(
                                                                                                                                                    0,
                                                                                                                                                ),
                                                                                                                                            ),
                                                                                                                                            output_type: Some(
                                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                            ),
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                        location_kind: Tick(
                                                                                                                                            2,
                                                                                                                                            Process(
                                                                                                                                                0,
                                                                                                                                            ),
                                                                                                                                        ),
                                                                                                                                        output_type: Some(
                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                    location_kind: Tick(
                                                                                                                                        2,
                                                                                                                                        Process(
                                                                                                                                            0,
                                                                                                                                        ),
                                                                                                                                    ),
                                                                                                                                    output_type: Some(
                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                            },
                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                location_kind: Tick(
                                                                                                                                    2,
                                                                                                                                    Process(
                                                                                                                                        0,
                                                                                                                                    ),
                                                                                                                                ),
                                                                                                                                output_type: Some(
                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        },
                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                            location_kind: Tick(
                                                                                                                                2,
                                                                                                                                Process(
                                                                                                                                    0,
                                                                                                                                ),
                                                                                                                            ),
                                                                                                                            output_type: Some(
                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    },
                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                        location_kind: Cluster(
                                                                                                                            2,
                                                                                                                        ),
                                                                                                                        output_type: Some(
                                                                                                                            (u32 , u32),
                                                                                                                        ),
                                                                                                                    },
                                                                                                                },
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Tick(
                                                                                                                        0,
                                                                                                                        Cluster(
                                                                                                                            2,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                    output_type: Some(
                                                                                                                        (u32 , core :: option :: Option < u32 >),
                                                                                                                    ),
                                                                                                                },
                                                                                                            },
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Tick(
                                                                                                                    0,
                                                                                                                    Cluster(
                                                                                                                        2,
                                                                                                                    ),
                                                                                                                ),
                                                                                                                output_type: Some(
                                                                                                                    (u32 , core :: option :: Option < u32 >),
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Tick(
                                                                                                                0,
                                                                                                                Cluster(
                                                                                                                    2,
                                                                                                                ),
                                                                                                            ),
                                                                                                            output_type: Some(
                                                                                                                usize,
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    right: Map {
                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < usize , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | _u | () }),
                                                                                                        input: Filter {
                                                                                                            f: stageleft :: runtime_support :: fn1_borrow_type_hint :: < usize , bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | c | * c == 0 }),
                                                                                                            input: Fold {
                                                                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | 0usize }),
                                                                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < usize , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | count , _ | * count += 1 }),
                                                                                                                input: Tee {
                                                                                                                    inner: <tee>: Reduce {
                                                                                                                        f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _ , _ | { } }),
                                                                                                                        input: Source {
                                                                                                                            source: Stream(
                                                                                                                                { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let interval__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; Duration :: from_secs (1) } ; tokio_stream :: wrappers :: IntervalStream :: new (tokio :: time :: interval (interval__free)) },
                                                                                                                            ),
                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                location_kind: Cluster(
                                                                                                                                    2,
                                                                                                                                ),
                                                                                                                                output_type: Some(
                                                                                                                                    hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        },
                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                            location_kind: Tick(
                                                                                                                                0,
                                                                                                                                Cluster(
                                                                                                                                    2,
                                                                                                                                ),
                                                                                                                            ),
                                                                                                                            output_type: Some(
                                                                                                                                hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    },
                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                        location_kind: Tick(
                                                                                                                            0,
                                                                                                                            Cluster(
                                                                                                                                2,
                                                                                                                            ),
                                                                                                                        ),
                                                                                                                        output_type: Some(
                                                                                                                            hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                                        ),
                                                                                                                    },
                                                                                                                },
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Tick(
                                                                                                                        0,
                                                                                                                        Cluster(
                                                                                                                            2,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                    output_type: Some(
                                                                                                                        usize,
                                                                                                                    ),
                                                                                                                },
                                                                                                            },
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Tick(
                                                                                                                    0,
                                                                                                                    Cluster(
                                                                                                                        2,
                                                                                                                    ),
                                                                                                                ),
                                                                                                                output_type: Some(
                                                                                                                    usize,
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Tick(
                                                                                                                0,
                                                                                                                Cluster(
                                                                                                                    2,
                                                                                                                ),
                                                                                                            ),
                                                                                                            output_type: Some(
                                                                                                                (),
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Tick(
                                                                                                            0,
                                                                                                            Cluster(
                                                                                                                2,
                                                                                                            ),
                                                                                                        ),
                                                                                                        output_type: Some(
                                                                                                            (usize , ()),
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Tick(
                                                                                                        0,
                                                                                                        Cluster(
                                                                                                            2,
                                                                                                        ),
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        usize,
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Tick(
                                                                                                    0,
                                                                                                    Cluster(
                                                                                                        2,
                                                                                                    ),
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    (usize , bool),
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        second: DeferTick {
                                                                                            input: Map {
                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , (usize , bool) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | _ | (0 , true) }),
                                                                                                input: Tee {
                                                                                                    inner: <tee>: Reduce {
                                                                                                        f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _ , _ | { } }),
                                                                                                        input: Source {
                                                                                                            source: Stream(
                                                                                                                { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let interval__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; Duration :: from_secs (1) } ; tokio_stream :: wrappers :: IntervalStream :: new (tokio :: time :: interval (interval__free)) },
                                                                                                            ),
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Cluster(
                                                                                                                    2,
                                                                                                                ),
                                                                                                                output_type: Some(
                                                                                                                    hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Tick(
                                                                                                                0,
                                                                                                                Cluster(
                                                                                                                    2,
                                                                                                                ),
                                                                                                            ),
                                                                                                            output_type: Some(
                                                                                                                hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Tick(
                                                                                                            0,
                                                                                                            Cluster(
                                                                                                                2,
                                                                                                            ),
                                                                                                        ),
                                                                                                        output_type: Some(
                                                                                                            hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Tick(
                                                                                                        0,
                                                                                                        Cluster(
                                                                                                            2,
                                                                                                        ),
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        (usize , bool),
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Tick(
                                                                                                    0,
                                                                                                    Cluster(
                                                                                                        2,
                                                                                                    ),
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    (usize , bool),
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        metadata: HydroIrMetadata {
                                                                                            location_kind: Tick(
                                                                                                0,
                                                                                                Cluster(
                                                                                                    2,
                                                                                                ),
                                                                                            ),
                                                                                            output_type: Some(
                                                                                                (usize , bool),
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Tick(
                                                                                            0,
                                                                                            Cluster(
                                                                                                2,
                                                                                            ),
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            (usize , bool),
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Cluster(
                                                                                        2,
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        (usize , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                                                    ),
                                                                                },
                                                                            },
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Cluster(
                                                                                    2,
                                                                                ),
                                                                                output_type: Some(
                                                                                    hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
                                                                                ),
                                                                            },
                                                                        },
                                                                        right: Map {
                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | _u | () }),
                                                                            input: Reduce {
                                                                                f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _ , _ | { } }),
                                                                                input: Source {
                                                                                    source: Stream(
                                                                                        { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let interval__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; Duration :: from_millis (1000) } ; tokio_stream :: wrappers :: IntervalStream :: new (tokio :: time :: interval (interval__free)) },
                                                                                    ),
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Cluster(
                                                                                            2,
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Tick(
                                                                                        5,
                                                                                        Cluster(
                                                                                            2,
                                                                                        ),
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                    ),
                                                                                },
                                                                            },
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Tick(
                                                                                    5,
                                                                                    Cluster(
                                                                                        2,
                                                                                    ),
                                                                                ),
                                                                                output_type: Some(
                                                                                    (),
                                                                                ),
                                                                            },
                                                                        },
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Tick(
                                                                                5,
                                                                                Cluster(
                                                                                    2,
                                                                                ),
                                                                            ),
                                                                            output_type: Some(
                                                                                (hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , ()),
                                                                            ),
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Tick(
                                                                            5,
                                                                            Cluster(
                                                                                2,
                                                                            ),
                                                                        ),
                                                                        output_type: Some(
                                                                            hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
                                                                        ),
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Process(
                                                                        3,
                                                                    ),
                                                                    output_type: Some(
                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                                    ),
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Process(
                                                                    3,
                                                                ),
                                                                output_type: Some(
                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                                ),
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Process(
                                                                3,
                                                            ),
                                                            output_type: Some(
                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                            ),
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Process(
                                                            3,
                                                        ),
                                                        output_type: Some(
                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                        ),
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Process(
                                                        3,
                                                    ),
                                                    output_type: Some(
                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                    ),
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Process(
                                                    3,
                                                ),
                                                output_type: Some(
                                                    usize,
                                                ),
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Tick(
                                                4,
                                                Process(
                                                    3,
                                                ),
                                            ),
                                            output_type: Some(
                                                (usize , usize),
                                            ),
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Tick(
                                            4,
                                            Process(
                                                3,
                                            ),
                                        ),
                                        output_type: Some(
                                            usize,
                                        ),
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        4,
                                        Process(
                                            3,
                                        ),
                                    ),
                                    output_type: Some(
                                        usize,
                                    ),
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    4,
                                    Process(
                                        3,
                                    ),
                                ),
                                output_type: Some(
                                    usize,
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                4,
                                Process(
                                    3,
                                ),
                            ),
                            output_type: Some(
                                usize,
                            ),
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            4,
                            Process(
                                3,
                            ),
                        ),
                        output_type: Some(
                            (),
                        ),
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        4,
                        Process(
                            3,
                        ),
                    ),
                    output_type: Some(
                        ((hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , usize) , ()),
                    ),
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Tick(
                    4,
                    Process(
                        3,
                    ),
                ),
                output_type: Some(
                    (hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , usize),
                ),
            },
        },
        op_metadata: HydroIrOpMetadata,
    },
    ForEach {
        f: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; move | latencies | { println ! ("Latency p50: {:.3} | p99 {:.3} | p999 {:.3} ms ({:} samples)" , Duration :: from_nanos (latencies . value_at_quantile (0.5)) . as_micros () as f64 / 1000.0 , Duration :: from_nanos (latencies . value_at_quantile (0.99)) . as_micros () as f64 / 1000.0 , Duration :: from_nanos (latencies . value_at_quantile (0.999)) . as_micros () as f64 / 1000.0 , latencies . len ()) ; } }),
        input: Map {
            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > , ()) , hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | (d , _signal) | d }),
            input: CrossSingleton {
                left: Map {
                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > , ()) , hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: optional :: * ; | (d , _signal) | d }),
                    input: CrossSingleton {
                        left: Reduce {
                            f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > , hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | combined , new | { combined . add (new) . unwrap () ; } }),
                            input: Map {
                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 >) , hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (_ , v) | v }),
                                input: ReduceKeyed {
                                    f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > , hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | combined , new | { * combined = new ; } }),
                                    input: Persist {
                                        inner: Map {
                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: SerializableHistogramWrapper) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 >) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: SerializableHistogramWrapper , hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | histogram | histogram . histogram . borrow () . clone () }) ; { let orig = f__free ; move | (k , v) | (k , orig (v)) } }),
                                            input: Network {
                                                serialize_fn: Some(
                                                    :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: SerializableHistogramWrapper , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                ),
                                                instantiate_fn: <network instantiate>,
                                                deserialize_fn: Some(
                                                    | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: SerializableHistogramWrapper > (& b) . unwrap ()) },
                                                ),
                                                input: Map {
                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < std :: rc :: Rc < core :: cell :: RefCell < hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > > > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: SerializableHistogramWrapper > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | latencies | { SerializableHistogramWrapper { histogram : latencies , } } }),
                                                    input: Map {
                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (std :: rc :: Rc < core :: cell :: RefCell < hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > > > , ()) , std :: rc :: Rc < core :: cell :: RefCell < hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > > > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | (d , _signal) | d }),
                                                        input: CrossSingleton {
                                                            left: Fold {
                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < std :: rc :: Rc < core :: cell :: RefCell < hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > > > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; move | | Rc :: new (RefCell :: new (Histogram :: < u64 > :: new (3) . unwrap ())) }),
                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < std :: rc :: Rc < core :: cell :: RefCell < hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > > > , core :: time :: Duration , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; move | latencies , latency | { latencies . borrow_mut () . record (latency . as_nanos () as u64) . unwrap () ; } }),
                                                                input: Persist {
                                                                    inner: Map {
                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (usize , (std :: time :: Instant , std :: time :: Instant)) , core :: time :: Duration > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (_virtual_id , (prev_time , curr_time)) | curr_time . duration_since (prev_time) }),
                                                                        input: Join {
                                                                            left: Tee {
                                                                                inner: <tee>: DeferTick {
                                                                                    input: CycleSource {
                                                                                        ident: Ident {
                                                                                            sym: cycle_3,
                                                                                        },
                                                                                        metadata: HydroIrMetadata {
                                                                                            location_kind: Tick(
                                                                                                0,
                                                                                                Cluster(
                                                                                                    2,
                                                                                                ),
                                                                                            ),
                                                                                            output_type: Some(
                                                                                                (usize , std :: time :: Instant),
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Tick(
                                                                                            0,
                                                                                            Cluster(
                                                                                                2,
                                                                                            ),
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            (usize , std :: time :: Instant),
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Tick(
                                                                                        0,
                                                                                        Cluster(
                                                                                            2,
                                                                                        ),
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        (usize , std :: time :: Instant),
                                                                                    ),
                                                                                },
                                                                            },
                                                                            right: Tee {
                                                                                inner: <tee>: Map {
                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , core :: option :: Option < u32 >) , (usize , std :: time :: Instant) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (key , _payload) | (key as usize , Instant :: now ()) }),
                                                                                    input: Tee {
                                                                                        inner: <tee>: Map {
                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , (u32 , core :: option :: Option < u32 >) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (virtual_id , payload) | (virtual_id , Some (payload)) }),
                                                                                            input: Network {
                                                                                                serialize_fn: Some(
                                                                                                    :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (u32 , u32)) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                ),
                                                                                                instantiate_fn: <network instantiate>,
                                                                                                deserialize_fn: Some(
                                                                                                    | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& res . unwrap ()) . unwrap () },
                                                                                                ),
                                                                                                input: Tee {
                                                                                                    inner: <tee>: FilterMap {
                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                                                                                                        input: Tee {
                                                                                                            inner: <tee>: FoldKeyed {
                                                                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                                                                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                                                                                                                input: Tee {
                                                                                                                    inner: <tee>: Chain {
                                                                                                                        first: DeferTick {
                                                                                                                            input: CycleSource {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: cycle_2,
                                                                                                                                },
                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                    location_kind: Tick(
                                                                                                                                        2,
                                                                                                                                        Process(
                                                                                                                                            0,
                                                                                                                                        ),
                                                                                                                                    ),
                                                                                                                                    output_type: Some(
                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                            },
                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                location_kind: Tick(
                                                                                                                                    2,
                                                                                                                                    Process(
                                                                                                                                        0,
                                                                                                                                    ),
                                                                                                                                ),
                                                                                                                                output_type: Some(
                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        },
                                                                                                                        second: Tee {
                                                                                                                            inner: <tee>: Map {
                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                                                                                                                input: Map {
                                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                                                                                                    input: Map {
                                                                                                                                        f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                                                                                                        input: Network {
                                                                                                                                            serialize_fn: Some(
                                                                                                                                                :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                            ),
                                                                                                                                            instantiate_fn: <network instantiate>,
                                                                                                                                            deserialize_fn: Some(
                                                                                                                                                | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                                                                                                            ),
                                                                                                                                            input: Network {
                                                                                                                                                serialize_fn: Some(
                                                                                                                                                    :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                                                                ),
                                                                                                                                                instantiate_fn: <network instantiate>,
                                                                                                                                                deserialize_fn: Some(
                                                                                                                                                    | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                                                                                                                ),
                                                                                                                                                input: Map {
                                                                                                                                                    f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                                                                                                    input: CrossProduct {
                                                                                                                                                        left: Map {
                                                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                                                                                                            input: FilterMap {
                                                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                                                                                                                input: FoldKeyed {
                                                                                                                                                                    init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                                                                                                    acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                                                                                                    input: Persist {
                                                                                                                                                                        inner: Map {
                                                                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                                                                                                            input: Source {
                                                                                                                                                                                source: Iter(
                                                                                                                                                                                    { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                                                                                                                ),
                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                                        0,
                                                                                                                                                                                    ),
                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                        & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                    ),
                                                                                                                                                                                },
                                                                                                                                                                            },
                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                    0,
                                                                                                                                                                                ),
                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                ),
                                                                                                                                                                            },
                                                                                                                                                                        },
                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                0,
                                                                                                                                                                            ),
                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                            ),
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                            0,
                                                                                                                                                                        ),
                                                                                                                                                                        output_type: Some(
                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                                                                                                        ),
                                                                                                                                                                    },
                                                                                                                                                                },
                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                        0,
                                                                                                                                                                    ),
                                                                                                                                                                    output_type: Some(
                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                                                                                                    ),
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                    3,
                                                                                                                                                                    Process(
                                                                                                                                                                        0,
                                                                                                                                                                    ),
                                                                                                                                                                ),
                                                                                                                                                                output_type: Some(
                                                                                                                                                                    hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                ),
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                        right: Tee {
                                                                                                                                                            inner: <tee>: FilterMap {
                                                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                                                                                                                                                                input: Tee {
                                                                                                                                                                    inner: <tee>: FoldKeyed {
                                                                                                                                                                        init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                                                                                                                                                                        acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                                                                                                                                                                        input: Tee {
                                                                                                                                                                            inner: <tee>: Chain {
                                                                                                                                                                                first: DeferTick {
                                                                                                                                                                                    input: CycleSource {
                                                                                                                                                                                        ident: Ident {
                                                                                                                                                                                            sym: cycle_1,
                                                                                                                                                                                        },
                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                                2,
                                                                                                                                                                                                Process(
                                                                                                                                                                                                    0,
                                                                                                                                                                                                ),
                                                                                                                                                                                            ),
                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                            ),
                                                                                                                                                                                        },
                                                                                                                                                                                    },
                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                        location_kind: Tick(
                                                                                                                                                                                            2,
                                                                                                                                                                                            Process(
                                                                                                                                                                                                0,
                                                                                                                                                                                            ),
                                                                                                                                                                                        ),
                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                        ),
                                                                                                                                                                                    },
                                                                                                                                                                                },
                                                                                                                                                                                second: Tee {
                                                                                                                                                                                    inner: <tee>: Map {
                                                                                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                                                                                                                                                                        input: Map {
                                                                                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                                                                                                                                                            input: Map {
                                                                                                                                                                                                f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                                                                                                                                                                input: Network {
                                                                                                                                                                                                    serialize_fn: Some(
                                                                                                                                                                                                        :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    instantiate_fn: <network instantiate>,
                                                                                                                                                                                                    deserialize_fn: Some(
                                                                                                                                                                                                        | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    input: Network {
                                                                                                                                                                                                        serialize_fn: Some(
                                                                                                                                                                                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                                                                                                                        ),
                                                                                                                                                                                                        instantiate_fn: <network instantiate>,
                                                                                                                                                                                                        deserialize_fn: Some(
                                                                                                                                                                                                            | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                                                                                                                                                                        ),
                                                                                                                                                                                                        input: Map {
                                                                                                                                                                                                            f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                                                                                                                                                            input: CrossProduct {
                                                                                                                                                                                                                left: Map {
                                                                                                                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                                                                                                                                                                    input: FilterMap {
                                                                                                                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                                                                                                                                                                        input: FoldKeyed {
                                                                                                                                                                                                                            init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                                                                                                                                                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                                                                                                                                                            input: Persist {
                                                                                                                                                                                                                                inner: Map {
                                                                                                                                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                                                                                                                                                                    input: Source {
                                                                                                                                                                                                                                        source: Iter(
                                                                                                                                                                                                                                            { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                                                                                0,
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                                                & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                                                                            0,
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                                                                                        0,
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                                                                0,
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                                        location_kind: Tick(
                                                                                                                                                                                                                            1,
                                                                                                                                                                                                                            Process(
                                                                                                                                                                                                                                0,
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                                            hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                },
                                                                                                                                                                                                                right: Network {
                                                                                                                                                                                                                    serialize_fn: Some(
                                                                                                                                                                                                                        :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                    instantiate_fn: <network instantiate>,
                                                                                                                                                                                                                    deserialize_fn: Some(
                                                                                                                                                                                                                        | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& b) . unwrap ()) },
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                    input: CycleSource {
                                                                                                                                                                                                                        ident: Ident {
                                                                                                                                                                                                                            sym: cycle_0,
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                                            location_kind: Cluster(
                                                                                                                                                                                                                                2,
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                                (u32 , u32),
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                                                            0,
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                },
                                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                                                                        1,
                                                                                                                                                                                                                        Process(
                                                                                                                                                                                                                            0,
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                },
                                                                                                                                                                                                            },
                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                                                                    1,
                                                                                                                                                                                                                    Process(
                                                                                                                                                                                                                        0,
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                ),
                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                                ),
                                                                                                                                                                                                            },
                                                                                                                                                                                                        },
                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                            location_kind: Cluster(
                                                                                                                                                                                                                1,
                                                                                                                                                                                                            ),
                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                                            ),
                                                                                                                                                                                                        },
                                                                                                                                                                                                    },
                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                                            0,
                                                                                                                                                                                                        ),
                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                        ),
                                                                                                                                                                                                    },
                                                                                                                                                                                                },
                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                                                        0,
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                    ),
                                                                                                                                                                                                },
                                                                                                                                                                                            },
                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                                    0,
                                                                                                                                                                                                ),
                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                                ),
                                                                                                                                                                                            },
                                                                                                                                                                                        },
                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                                0,
                                                                                                                                                                                            ),
                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                            ),
                                                                                                                                                                                        },
                                                                                                                                                                                    },
                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                        location_kind: Tick(
                                                                                                                                                                                            2,
                                                                                                                                                                                            Process(
                                                                                                                                                                                                0,
                                                                                                                                                                                            ),
                                                                                                                                                                                        ),
                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                        ),
                                                                                                                                                                                    },
                                                                                                                                                                                },
                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                                        2,
                                                                                                                                                                                        Process(
                                                                                                                                                                                            0,
                                                                                                                                                                                        ),
                                                                                                                                                                                    ),
                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                    ),
                                                                                                                                                                                },
                                                                                                                                                                            },
                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                                    2,
                                                                                                                                                                                    Process(
                                                                                                                                                                                        0,
                                                                                                                                                                                    ),
                                                                                                                                                                                ),
                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                ),
                                                                                                                                                                            },
                                                                                                                                                                        },
                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                2,
                                                                                                                                                                                Process(
                                                                                                                                                                                    0,
                                                                                                                                                                                ),
                                                                                                                                                                            ),
                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                                                                            ),
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                        location_kind: Tick(
                                                                                                                                                                            2,
                                                                                                                                                                            Process(
                                                                                                                                                                                0,
                                                                                                                                                                            ),
                                                                                                                                                                        ),
                                                                                                                                                                        output_type: Some(
                                                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                                                                        ),
                                                                                                                                                                    },
                                                                                                                                                                },
                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                        2,
                                                                                                                                                                        Process(
                                                                                                                                                                            0,
                                                                                                                                                                        ),
                                                                                                                                                                    ),
                                                                                                                                                                    output_type: Some(
                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                    ),
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                    2,
                                                                                                                                                                    Process(
                                                                                                                                                                        0,
                                                                                                                                                                    ),
                                                                                                                                                                ),
                                                                                                                                                                output_type: Some(
                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                ),
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                3,
                                                                                                                                                                Process(
                                                                                                                                                                    0,
                                                                                                                                                                ),
                                                                                                                                                            ),
                                                                                                                                                            output_type: Some(
                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                            ),
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                        location_kind: Tick(
                                                                                                                                                            3,
                                                                                                                                                            Process(
                                                                                                                                                                0,
                                                                                                                                                            ),
                                                                                                                                                        ),
                                                                                                                                                        output_type: Some(
                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                        ),
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                    location_kind: Cluster(
                                                                                                                                                        1,
                                                                                                                                                    ),
                                                                                                                                                    output_type: Some(
                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                    ),
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                location_kind: Process(
                                                                                                                                                    0,
                                                                                                                                                ),
                                                                                                                                                output_type: Some(
                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                ),
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                            location_kind: Process(
                                                                                                                                                0,
                                                                                                                                            ),
                                                                                                                                            output_type: Some(
                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                            ),
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                        location_kind: Process(
                                                                                                                                            0,
                                                                                                                                        ),
                                                                                                                                        output_type: Some(
                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                    location_kind: Process(
                                                                                                                                        0,
                                                                                                                                    ),
                                                                                                                                    output_type: Some(
                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                            },
                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                location_kind: Tick(
                                                                                                                                    2,
                                                                                                                                    Process(
                                                                                                                                        0,
                                                                                                                                    ),
                                                                                                                                ),
                                                                                                                                output_type: Some(
                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        },
                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                            location_kind: Tick(
                                                                                                                                2,
                                                                                                                                Process(
                                                                                                                                    0,
                                                                                                                                ),
                                                                                                                            ),
                                                                                                                            output_type: Some(
                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    },
                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                        location_kind: Tick(
                                                                                                                            2,
                                                                                                                            Process(
                                                                                                                                0,
                                                                                                                            ),
                                                                                                                        ),
                                                                                                                        output_type: Some(
                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                        ),
                                                                                                                    },
                                                                                                                },
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Tick(
                                                                                                                        2,
                                                                                                                        Process(
                                                                                                                            0,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                    output_type: Some(
                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                    ),
                                                                                                                },
                                                                                                            },
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Tick(
                                                                                                                    2,
                                                                                                                    Process(
                                                                                                                        0,
                                                                                                                    ),
                                                                                                                ),
                                                                                                                output_type: Some(
                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Tick(
                                                                                                                2,
                                                                                                                Process(
                                                                                                                    0,
                                                                                                                ),
                                                                                                            ),
                                                                                                            output_type: Some(
                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Tick(
                                                                                                            2,
                                                                                                            Process(
                                                                                                                0,
                                                                                                            ),
                                                                                                        ),
                                                                                                        output_type: Some(
                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Cluster(
                                                                                                        2,
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        (u32 , u32),
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Tick(
                                                                                                    0,
                                                                                                    Cluster(
                                                                                                        2,
                                                                                                    ),
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    (u32 , core :: option :: Option < u32 >),
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        metadata: HydroIrMetadata {
                                                                                            location_kind: Tick(
                                                                                                0,
                                                                                                Cluster(
                                                                                                    2,
                                                                                                ),
                                                                                            ),
                                                                                            output_type: Some(
                                                                                                (u32 , core :: option :: Option < u32 >),
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Tick(
                                                                                            0,
                                                                                            Cluster(
                                                                                                2,
                                                                                            ),
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            (usize , std :: time :: Instant),
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Tick(
                                                                                        0,
                                                                                        Cluster(
                                                                                            2,
                                                                                        ),
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        (usize , std :: time :: Instant),
                                                                                    ),
                                                                                },
                                                                            },
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Tick(
                                                                                    0,
                                                                                    Cluster(
                                                                                        2,
                                                                                    ),
                                                                                ),
                                                                                output_type: Some(
                                                                                    (usize , (std :: time :: Instant , std :: time :: Instant)),
                                                                                ),
                                                                            },
                                                                        },
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Tick(
                                                                                0,
                                                                                Cluster(
                                                                                    2,
                                                                                ),
                                                                            ),
                                                                            output_type: Some(
                                                                                core :: time :: Duration,
                                                                            ),
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Tick(
                                                                            0,
                                                                            Cluster(
                                                                                2,
                                                                            ),
                                                                        ),
                                                                        output_type: Some(
                                                                            core :: time :: Duration,
                                                                        ),
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Cluster(
                                                                        2,
                                                                    ),
                                                                    output_type: Some(
                                                                        std :: rc :: Rc < core :: cell :: RefCell < hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > > >,
                                                                    ),
                                                                },
                                                            },
                                                            right: Map {
                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | _u | () }),
                                                                input: Reduce {
                                                                    f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _ , _ | { } }),
                                                                    input: Source {
                                                                        source: Stream(
                                                                            { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let interval__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; Duration :: from_millis (1000) } ; tokio_stream :: wrappers :: IntervalStream :: new (tokio :: time :: interval (interval__free)) },
                                                                        ),
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Cluster(
                                                                                2,
                                                                            ),
                                                                            output_type: Some(
                                                                                hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                            ),
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Tick(
                                                                            9,
                                                                            Cluster(
                                                                                2,
                                                                            ),
                                                                        ),
                                                                        output_type: Some(
                                                                            hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                        ),
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Tick(
                                                                        9,
                                                                        Cluster(
                                                                            2,
                                                                        ),
                                                                    ),
                                                                    output_type: Some(
                                                                        (),
                                                                    ),
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Tick(
                                                                    9,
                                                                    Cluster(
                                                                        2,
                                                                    ),
                                                                ),
                                                                output_type: Some(
                                                                    (std :: rc :: Rc < core :: cell :: RefCell < hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > > > , ()),
                                                                ),
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Tick(
                                                                9,
                                                                Cluster(
                                                                    2,
                                                                ),
                                                            ),
                                                            output_type: Some(
                                                                std :: rc :: Rc < core :: cell :: RefCell < hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > > >,
                                                            ),
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Cluster(
                                                            2,
                                                        ),
                                                        output_type: Some(
                                                            hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: SerializableHistogramWrapper,
                                                        ),
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Process(
                                                        3,
                                                    ),
                                                    output_type: Some(
                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: SerializableHistogramWrapper),
                                                    ),
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Process(
                                                    3,
                                                ),
                                                output_type: Some(
                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 >),
                                                ),
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Process(
                                                3,
                                            ),
                                            output_type: Some(
                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 >),
                                            ),
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Process(
                                            3,
                                        ),
                                        output_type: Some(
                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 >),
                                        ),
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        10,
                                        Process(
                                            3,
                                        ),
                                    ),
                                    output_type: Some(
                                        hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 >,
                                    ),
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    10,
                                    Process(
                                        3,
                                    ),
                                ),
                                output_type: Some(
                                    hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 >,
                                ),
                            },
                        },
                        right: Map {
                            f: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: optional :: * ; | _u | () }),
                            input: Reduce {
                                f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _ , _ | { } }),
                                input: Source {
                                    source: Stream(
                                        { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let interval__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; Duration :: from_millis (1000) } ; tokio_stream :: wrappers :: IntervalStream :: new (tokio :: time :: interval (interval__free)) },
                                    ),
                                    metadata: HydroIrMetadata {
                                        location_kind: Process(
                                            3,
                                        ),
                                        output_type: Some(
                                            hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                        ),
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        11,
                                        Process(
                                            3,
                                        ),
                                    ),
                                    output_type: Some(
                                        hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                    ),
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    11,
                                    Process(
                                        3,
                                    ),
                                ),
                                output_type: Some(
                                    (),
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                11,
                                Process(
                                    3,
                                ),
                            ),
                            output_type: Some(
                                (hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > , ()),
                            ),
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            11,
                            Process(
                                3,
                            ),
                        ),
                        output_type: Some(
                            hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 >,
                        ),
                    },
                },
                right: Map {
                    f: stageleft :: runtime_support :: fn1_type_hint :: < usize , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _u | () }),
                    input: Filter {
                        f: stageleft :: runtime_support :: fn1_borrow_type_hint :: < usize , bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | c | * c == 0 }),
                        input: Fold {
                            init: stageleft :: runtime_support :: fn0_type_hint :: < usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | 0usize }),
                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < usize , usize , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | count , _ | * count += 1 }),
                            input: Tee {
                                inner: <tee>: FilterMap {
                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (usize , usize) , core :: option :: Option < usize > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (num_clients , num_clients_with_throughput) | { if num_clients > num_clients_with_throughput { Some (num_clients - num_clients_with_throughput) } else { None } } }),
                                    input: CrossSingleton {
                                        left: Tee {
                                            inner: <tee>: Fold {
                                                init: stageleft :: runtime_support :: fn0_type_hint :: < usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | 0usize }),
                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < usize , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , ()) , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | count , _ | * count += 1 }),
                                                input: FilterMap {
                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: membership :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                    input: FoldKeyed {
                                                        init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: membership :: * ; | | false }),
                                                        acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: membership :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                        input: Persist {
                                                            inner: Map {
                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                input: Source {
                                                                    source: Iter(
                                                                        { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client >] > (__hydro_lang_cluster_ids_2) } ; underlying_memberids__free },
                                                                    ),
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Process(
                                                                            3,
                                                                        ),
                                                                        output_type: Some(
                                                                            & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client >,
                                                                        ),
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Process(
                                                                        3,
                                                                    ),
                                                                    output_type: Some(
                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                    ),
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Process(
                                                                    3,
                                                                ),
                                                                output_type: Some(
                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                ),
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Process(
                                                                3,
                                                            ),
                                                            output_type: Some(
                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , bool),
                                                            ),
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Process(
                                                            3,
                                                        ),
                                                        output_type: Some(
                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , ()),
                                                        ),
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Process(
                                                        3,
                                                    ),
                                                    output_type: Some(
                                                        usize,
                                                    ),
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Tick(
                                                    4,
                                                    Process(
                                                        3,
                                                    ),
                                                ),
                                                output_type: Some(
                                                    usize,
                                                ),
                                            },
                                        },
                                        right: Fold {
                                            init: stageleft :: runtime_support :: fn0_type_hint :: < usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | 0usize }),
                                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < usize , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | count , _ | * count += 1 }),
                                            input: Tee {
                                                inner: <tee>: Filter {
                                                    f: stageleft :: runtime_support :: fn1_borrow_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) , bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_borrow_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , bool > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | throughputs | throughputs . sample_mean () > 0.0 }) ; { let orig = f__free ; move | (_k , v) | orig (v) } }),
                                                    input: ReduceKeyed {
                                                        f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | combined , new | { * combined = new ; } }),
                                                        input: Persist {
                                                            inner: Network {
                                                                serialize_fn: Some(
                                                                    :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                ),
                                                                instantiate_fn: <network instantiate>,
                                                                deserialize_fn: Some(
                                                                    | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage > (& b) . unwrap ()) },
                                                                ),
                                                                input: Map {
                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , ()) , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | (d , _signal) | d }),
                                                                    input: CrossSingleton {
                                                                        left: Map {
                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (usize , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (_ , stats) | { stats } }),
                                                                            input: Fold {
                                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | | (0 , { RollingAverage :: new () }) }),
                                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage) , (usize , bool) , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (total , stats) , (batch_size , reset) | { if reset { if * total > 0 { stats . add_sample (* total as f64) ; } * total = 0 ; } else { * total += batch_size ; } } }),
                                                                                input: Persist {
                                                                                    inner: Chain {
                                                                                        first: Map {
                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < usize , (usize , bool) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | batch_size | (batch_size , false) }),
                                                                                            input: Map {
                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (usize , ()) , usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | (d , _signal) | d }),
                                                                                                input: CrossSingleton {
                                                                                                    left: Fold {
                                                                                                        init: stageleft :: runtime_support :: fn0_type_hint :: < usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | 0usize }),
                                                                                                        acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < usize , (u32 , core :: option :: Option < u32 >) , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | count , _ | * count += 1 }),
                                                                                                        input: Tee {
                                                                                                            inner: <tee>: Map {
                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , (u32 , core :: option :: Option < u32 >) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | (virtual_id , payload) | (virtual_id , Some (payload)) }),
                                                                                                                input: Network {
                                                                                                                    serialize_fn: Some(
                                                                                                                        :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (u32 , u32)) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                                    ),
                                                                                                                    instantiate_fn: <network instantiate>,
                                                                                                                    deserialize_fn: Some(
                                                                                                                        | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& res . unwrap ()) . unwrap () },
                                                                                                                    ),
                                                                                                                    input: Tee {
                                                                                                                        inner: <tee>: FilterMap {
                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                                                                                                                            input: Tee {
                                                                                                                                inner: <tee>: FoldKeyed {
                                                                                                                                    init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                                                                                                                                    acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                                                                                                                                    input: Tee {
                                                                                                                                        inner: <tee>: Chain {
                                                                                                                                            first: DeferTick {
                                                                                                                                                input: CycleSource {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: cycle_2,
                                                                                                                                                    },
                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                        location_kind: Tick(
                                                                                                                                                            2,
                                                                                                                                                            Process(
                                                                                                                                                                0,
                                                                                                                                                            ),
                                                                                                                                                        ),
                                                                                                                                                        output_type: Some(
                                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                        ),
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                    location_kind: Tick(
                                                                                                                                                        2,
                                                                                                                                                        Process(
                                                                                                                                                            0,
                                                                                                                                                        ),
                                                                                                                                                    ),
                                                                                                                                                    output_type: Some(
                                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                    ),
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            second: Tee {
                                                                                                                                                inner: <tee>: Map {
                                                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                                                                                                                                    input: Map {
                                                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                                                                                                                        input: Map {
                                                                                                                                                            f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                                                                                                                            input: Network {
                                                                                                                                                                serialize_fn: Some(
                                                                                                                                                                    :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                                                ),
                                                                                                                                                                instantiate_fn: <network instantiate>,
                                                                                                                                                                deserialize_fn: Some(
                                                                                                                                                                    | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                                                                                                                                ),
                                                                                                                                                                input: Network {
                                                                                                                                                                    serialize_fn: Some(
                                                                                                                                                                        :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                                                                                    ),
                                                                                                                                                                    instantiate_fn: <network instantiate>,
                                                                                                                                                                    deserialize_fn: Some(
                                                                                                                                                                        | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                                                                                                                                    ),
                                                                                                                                                                    input: Map {
                                                                                                                                                                        f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                                                                                                                        input: CrossProduct {
                                                                                                                                                                            left: Map {
                                                                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                                                                                                                                input: FilterMap {
                                                                                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                                                                                                                                    input: FoldKeyed {
                                                                                                                                                                                        init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                                                                                                                        acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                                                                                                                        input: Persist {
                                                                                                                                                                                            inner: Map {
                                                                                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                                                                                                                                input: Source {
                                                                                                                                                                                                    source: Iter(
                                                                                                                                                                                                        { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                                            0,
                                                                                                                                                                                                        ),
                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                            & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                                        ),
                                                                                                                                                                                                    },
                                                                                                                                                                                                },
                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                                                        0,
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                                    ),
                                                                                                                                                                                                },
                                                                                                                                                                                            },
                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                                    0,
                                                                                                                                                                                                ),
                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                                ),
                                                                                                                                                                                            },
                                                                                                                                                                                        },
                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                                0,
                                                                                                                                                                                            ),
                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                                                                                                                            ),
                                                                                                                                                                                        },
                                                                                                                                                                                    },
                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                            0,
                                                                                                                                                                                        ),
                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                                                                                                                        ),
                                                                                                                                                                                    },
                                                                                                                                                                                },
                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                                        3,
                                                                                                                                                                                        Process(
                                                                                                                                                                                            0,
                                                                                                                                                                                        ),
                                                                                                                                                                                    ),
                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                        hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                    ),
                                                                                                                                                                                },
                                                                                                                                                                            },
                                                                                                                                                                            right: Tee {
                                                                                                                                                                                inner: <tee>: FilterMap {
                                                                                                                                                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; let min__free = 3usize ; move | (key , (success , _error)) | if success >= min__free { Some (key) } else { None } }),
                                                                                                                                                                                    input: Tee {
                                                                                                                                                                                        inner: <tee>: FoldKeyed {
                                                                                                                                                                                            init: stageleft :: runtime_support :: fn0_type_hint :: < (usize , usize) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | | (0 , 0) }),
                                                                                                                                                                                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (usize , usize) , core :: result :: Result < () , () > , () > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: quorum :: * ; move | accum , value | { if value . is_ok () { accum . 0 += 1 ; } else { accum . 1 += 1 ; } } }),
                                                                                                                                                                                            input: Tee {
                                                                                                                                                                                                inner: <tee>: Chain {
                                                                                                                                                                                                    first: DeferTick {
                                                                                                                                                                                                        input: CycleSource {
                                                                                                                                                                                                            ident: Ident {
                                                                                                                                                                                                                sym: cycle_1,
                                                                                                                                                                                                            },
                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                                                                    2,
                                                                                                                                                                                                                    Process(
                                                                                                                                                                                                                        0,
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                ),
                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                                ),
                                                                                                                                                                                                            },
                                                                                                                                                                                                        },
                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                                                2,
                                                                                                                                                                                                                Process(
                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                ),
                                                                                                                                                                                                            ),
                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                            ),
                                                                                                                                                                                                        },
                                                                                                                                                                                                    },
                                                                                                                                                                                                    second: Tee {
                                                                                                                                                                                                        inner: <tee>: Map {
                                                                                                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >) > ({ use hydro_test :: __staged :: __deps :: * ; use hydro_test :: __staged :: cluster :: two_pc :: * ; | kv | (kv , Ok :: < () , () > (())) }),
                                                                                                                                                                                                            input: Map {
                                                                                                                                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                                                                                                                                                                                                input: Map {
                                                                                                                                                                                                                    f: | (sender_id , b) | (:: hydro_lang :: location :: MemberId :: < _ > :: from_raw (sender_id . raw_id / 3usize as u32) , b),
                                                                                                                                                                                                                    input: Network {
                                                                                                                                                                                                                        serialize_fn: Some(
                                                                                                                                                                                                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                        instantiate_fn: <network instantiate>,
                                                                                                                                                                                                                        deserialize_fn: Some(
                                                                                                                                                                                                                            | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc :: Participant > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& b) . unwrap ()) },
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                        input: Network {
                                                                                                                                                                                                                            serialize_fn: Some(
                                                                                                                                                                                                                                :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                            instantiate_fn: <network instantiate>,
                                                                                                                                                                                                                            deserialize_fn: Some(
                                                                                                                                                                                                                                | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) > (& res . unwrap ()) . unwrap () },
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                            input: Map {
                                                                                                                                                                                                                                f: | (orig_dest , struct_or_tuple) : (:: hydro_lang :: location :: MemberId < _ > , _) | { let mut s = :: std :: hash :: DefaultHasher :: new () ; :: std :: hash :: Hash :: hash (& struct_or_tuple , & mut s) ; let partition_val = :: std :: hash :: Hasher :: finish (& s) as u32 ; (:: hydro_lang :: location :: MemberId :: < () > :: from_raw ((orig_dest . raw_id * 3usize as u32) + (partition_val % 3usize as u32) as u32) , struct_or_tuple) },
                                                                                                                                                                                                                                input: CrossProduct {
                                                                                                                                                                                                                                    left: Map {
                                                                                                                                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                                                                                                                                                                                        input: FilterMap {
                                                                                                                                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| v | (k , v)) } }),
                                                                                                                                                                                                                                            input: FoldKeyed {
                                                                                                                                                                                                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                                                                                                                                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                                                                                                                                                                                input: Persist {
                                                                                                                                                                                                                                                    inner: Map {
                                                                                                                                                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                                                                                                                                                                                        input: Source {
                                                                                                                                                                                                                                                            source: Iter(
                                                                                                                                                                                                                                                                { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = { let all_ids = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >] > (__hydro_lang_cluster_ids_1) } ; & all_ids [0 .. all_ids . len () / 3usize] } ; underlying_memberids__free },
                                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                                                                    & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                                                                                                0,
                                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                                                                                            0,
                                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                                                                                                        0,
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , bool),
                                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , ()),
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                                                                                1,
                                                                                                                                                                                                                                                Process(
                                                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                                                hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant >,
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    right: Network {
                                                                                                                                                                                                                                        serialize_fn: Some(
                                                                                                                                                                                                                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (u32 , u32) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        instantiate_fn: <network instantiate>,
                                                                                                                                                                                                                                        deserialize_fn: Some(
                                                                                                                                                                                                                                            | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (u32 , u32) > (& b) . unwrap ()) },
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        input: CycleSource {
                                                                                                                                                                                                                                            ident: Ident {
                                                                                                                                                                                                                                                sym: cycle_0,
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                                                location_kind: Cluster(
                                                                                                                                                                                                                                                    2,
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                                                    (u32 , u32),
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                                                                                0,
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                                                        location_kind: Tick(
                                                                                                                                                                                                                                            1,
                                                                                                                                                                                                                                            Process(
                                                                                                                                                                                                                                                0,
                                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                                                                                        1,
                                                                                                                                                                                                                                        Process(
                                                                                                                                                                                                                                            0,
                                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                                location_kind: Cluster(
                                                                                                                                                                                                                                    1,
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                                            location_kind: Process(
                                                                                                                                                                                                                                0,
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                                        location_kind: Process(
                                                                                                                                                                                                                            0,
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                },
                                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                                                                        0,
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                },
                                                                                                                                                                                                            },
                                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                                location_kind: Process(
                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                ),
                                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                                ),
                                                                                                                                                                                                            },
                                                                                                                                                                                                        },
                                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                                                2,
                                                                                                                                                                                                                Process(
                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                ),
                                                                                                                                                                                                            ),
                                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                            ),
                                                                                                                                                                                                        },
                                                                                                                                                                                                    },
                                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                                        location_kind: Tick(
                                                                                                                                                                                                            2,
                                                                                                                                                                                                            Process(
                                                                                                                                                                                                                0,
                                                                                                                                                                                                            ),
                                                                                                                                                                                                        ),
                                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                        ),
                                                                                                                                                                                                    },
                                                                                                                                                                                                },
                                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                                                        2,
                                                                                                                                                                                                        Process(
                                                                                                                                                                                                            0,
                                                                                                                                                                                                        ),
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                                                                    ),
                                                                                                                                                                                                },
                                                                                                                                                                                            },
                                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                                                    2,
                                                                                                                                                                                                    Process(
                                                                                                                                                                                                        0,
                                                                                                                                                                                                    ),
                                                                                                                                                                                                ),
                                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                                                                                                ),
                                                                                                                                                                                            },
                                                                                                                                                                                        },
                                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                                2,
                                                                                                                                                                                                Process(
                                                                                                                                                                                                    0,
                                                                                                                                                                                                ),
                                                                                                                                                                                            ),
                                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                                                                                            ),
                                                                                                                                                                                        },
                                                                                                                                                                                    },
                                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                                        location_kind: Tick(
                                                                                                                                                                                            2,
                                                                                                                                                                                            Process(
                                                                                                                                                                                                0,
                                                                                                                                                                                            ),
                                                                                                                                                                                        ),
                                                                                                                                                                                        output_type: Some(
                                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                        ),
                                                                                                                                                                                    },
                                                                                                                                                                                },
                                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                                    location_kind: Tick(
                                                                                                                                                                                        2,
                                                                                                                                                                                        Process(
                                                                                                                                                                                            0,
                                                                                                                                                                                        ),
                                                                                                                                                                                    ),
                                                                                                                                                                                    output_type: Some(
                                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                                    ),
                                                                                                                                                                                },
                                                                                                                                                                            },
                                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                                location_kind: Tick(
                                                                                                                                                                                    3,
                                                                                                                                                                                    Process(
                                                                                                                                                                                        0,
                                                                                                                                                                                    ),
                                                                                                                                                                                ),
                                                                                                                                                                                output_type: Some(
                                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                                ),
                                                                                                                                                                            },
                                                                                                                                                                        },
                                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                                            location_kind: Tick(
                                                                                                                                                                                3,
                                                                                                                                                                                Process(
                                                                                                                                                                                    0,
                                                                                                                                                                                ),
                                                                                                                                                                            ),
                                                                                                                                                                            output_type: Some(
                                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                            ),
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                                        location_kind: Cluster(
                                                                                                                                                                            1,
                                                                                                                                                                        ),
                                                                                                                                                                        output_type: Some(
                                                                                                                                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                                        ),
                                                                                                                                                                    },
                                                                                                                                                                },
                                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                                    location_kind: Process(
                                                                                                                                                                        0,
                                                                                                                                                                    ),
                                                                                                                                                                    output_type: Some(
                                                                                                                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                    ),
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                location_kind: Process(
                                                                                                                                                                    0,
                                                                                                                                                                ),
                                                                                                                                                                output_type: Some(
                                                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc :: Participant > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32))),
                                                                                                                                                                ),
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                            location_kind: Process(
                                                                                                                                                                0,
                                                                                                                                                            ),
                                                                                                                                                            output_type: Some(
                                                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                                            ),
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                        location_kind: Process(
                                                                                                                                                            0,
                                                                                                                                                        ),
                                                                                                                                                        output_type: Some(
                                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                        ),
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                    location_kind: Tick(
                                                                                                                                                        2,
                                                                                                                                                        Process(
                                                                                                                                                            0,
                                                                                                                                                        ),
                                                                                                                                                    ),
                                                                                                                                                    output_type: Some(
                                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                    ),
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                location_kind: Tick(
                                                                                                                                                    2,
                                                                                                                                                    Process(
                                                                                                                                                        0,
                                                                                                                                                    ),
                                                                                                                                                ),
                                                                                                                                                output_type: Some(
                                                                                                                                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                                ),
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                            location_kind: Tick(
                                                                                                                                                2,
                                                                                                                                                Process(
                                                                                                                                                    0,
                                                                                                                                                ),
                                                                                                                                            ),
                                                                                                                                            output_type: Some(
                                                                                                                                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                                                                                                                            ),
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                        location_kind: Tick(
                                                                                                                                            2,
                                                                                                                                            Process(
                                                                                                                                                0,
                                                                                                                                            ),
                                                                                                                                        ),
                                                                                                                                        output_type: Some(
                                                                                                                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                    location_kind: Tick(
                                                                                                                                        2,
                                                                                                                                        Process(
                                                                                                                                            0,
                                                                                                                                        ),
                                                                                                                                    ),
                                                                                                                                    output_type: Some(
                                                                                                                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                            },
                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                location_kind: Tick(
                                                                                                                                    2,
                                                                                                                                    Process(
                                                                                                                                        0,
                                                                                                                                    ),
                                                                                                                                ),
                                                                                                                                output_type: Some(
                                                                                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        },
                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                            location_kind: Tick(
                                                                                                                                2,
                                                                                                                                Process(
                                                                                                                                    0,
                                                                                                                                ),
                                                                                                                            ),
                                                                                                                            output_type: Some(
                                                                                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    },
                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                        location_kind: Cluster(
                                                                                                                            2,
                                                                                                                        ),
                                                                                                                        output_type: Some(
                                                                                                                            (u32 , u32),
                                                                                                                        ),
                                                                                                                    },
                                                                                                                },
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Tick(
                                                                                                                        0,
                                                                                                                        Cluster(
                                                                                                                            2,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                    output_type: Some(
                                                                                                                        (u32 , core :: option :: Option < u32 >),
                                                                                                                    ),
                                                                                                                },
                                                                                                            },
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Tick(
                                                                                                                    0,
                                                                                                                    Cluster(
                                                                                                                        2,
                                                                                                                    ),
                                                                                                                ),
                                                                                                                output_type: Some(
                                                                                                                    (u32 , core :: option :: Option < u32 >),
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Tick(
                                                                                                                0,
                                                                                                                Cluster(
                                                                                                                    2,
                                                                                                                ),
                                                                                                            ),
                                                                                                            output_type: Some(
                                                                                                                usize,
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    right: Map {
                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < usize , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | _u | () }),
                                                                                                        input: Filter {
                                                                                                            f: stageleft :: runtime_support :: fn1_borrow_type_hint :: < usize , bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | c | * c == 0 }),
                                                                                                            input: Fold {
                                                                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < usize > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | 0usize }),
                                                                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < usize , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | count , _ | * count += 1 }),
                                                                                                                input: Tee {
                                                                                                                    inner: <tee>: Reduce {
                                                                                                                        f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _ , _ | { } }),
                                                                                                                        input: Source {
                                                                                                                            source: Stream(
                                                                                                                                { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let interval__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; Duration :: from_secs (1) } ; tokio_stream :: wrappers :: IntervalStream :: new (tokio :: time :: interval (interval__free)) },
                                                                                                                            ),
                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                location_kind: Cluster(
                                                                                                                                    2,
                                                                                                                                ),
                                                                                                                                output_type: Some(
                                                                                                                                    hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        },
                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                            location_kind: Tick(
                                                                                                                                0,
                                                                                                                                Cluster(
                                                                                                                                    2,
                                                                                                                                ),
                                                                                                                            ),
                                                                                                                            output_type: Some(
                                                                                                                                hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    },
                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                        location_kind: Tick(
                                                                                                                            0,
                                                                                                                            Cluster(
                                                                                                                                2,
                                                                                                                            ),
                                                                                                                        ),
                                                                                                                        output_type: Some(
                                                                                                                            hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                                        ),
                                                                                                                    },
                                                                                                                },
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Tick(
                                                                                                                        0,
                                                                                                                        Cluster(
                                                                                                                            2,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                    output_type: Some(
                                                                                                                        usize,
                                                                                                                    ),
                                                                                                                },
                                                                                                            },
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Tick(
                                                                                                                    0,
                                                                                                                    Cluster(
                                                                                                                        2,
                                                                                                                    ),
                                                                                                                ),
                                                                                                                output_type: Some(
                                                                                                                    usize,
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Tick(
                                                                                                                0,
                                                                                                                Cluster(
                                                                                                                    2,
                                                                                                                ),
                                                                                                            ),
                                                                                                            output_type: Some(
                                                                                                                (),
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Tick(
                                                                                                            0,
                                                                                                            Cluster(
                                                                                                                2,
                                                                                                            ),
                                                                                                        ),
                                                                                                        output_type: Some(
                                                                                                            (usize , ()),
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Tick(
                                                                                                        0,
                                                                                                        Cluster(
                                                                                                            2,
                                                                                                        ),
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        usize,
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Tick(
                                                                                                    0,
                                                                                                    Cluster(
                                                                                                        2,
                                                                                                    ),
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    (usize , bool),
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        second: DeferTick {
                                                                                            input: Map {
                                                                                                f: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , (usize , bool) > ({ use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; | _ | (0 , true) }),
                                                                                                input: Tee {
                                                                                                    inner: <tee>: Reduce {
                                                                                                        f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _ , _ | { } }),
                                                                                                        input: Source {
                                                                                                            source: Stream(
                                                                                                                { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let interval__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; Duration :: from_secs (1) } ; tokio_stream :: wrappers :: IntervalStream :: new (tokio :: time :: interval (interval__free)) },
                                                                                                            ),
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Cluster(
                                                                                                                    2,
                                                                                                                ),
                                                                                                                output_type: Some(
                                                                                                                    hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Tick(
                                                                                                                0,
                                                                                                                Cluster(
                                                                                                                    2,
                                                                                                                ),
                                                                                                            ),
                                                                                                            output_type: Some(
                                                                                                                hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Tick(
                                                                                                            0,
                                                                                                            Cluster(
                                                                                                                2,
                                                                                                            ),
                                                                                                        ),
                                                                                                        output_type: Some(
                                                                                                            hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Tick(
                                                                                                        0,
                                                                                                        Cluster(
                                                                                                            2,
                                                                                                        ),
                                                                                                    ),
                                                                                                    output_type: Some(
                                                                                                        (usize , bool),
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Tick(
                                                                                                    0,
                                                                                                    Cluster(
                                                                                                        2,
                                                                                                    ),
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    (usize , bool),
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        metadata: HydroIrMetadata {
                                                                                            location_kind: Tick(
                                                                                                0,
                                                                                                Cluster(
                                                                                                    2,
                                                                                                ),
                                                                                            ),
                                                                                            output_type: Some(
                                                                                                (usize , bool),
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Tick(
                                                                                            0,
                                                                                            Cluster(
                                                                                                2,
                                                                                            ),
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            (usize , bool),
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Cluster(
                                                                                        2,
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        (usize , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                                                    ),
                                                                                },
                                                                            },
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Cluster(
                                                                                    2,
                                                                                ),
                                                                                output_type: Some(
                                                                                    hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
                                                                                ),
                                                                            },
                                                                        },
                                                                        right: Map {
                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: singleton :: * ; | _u | () }),
                                                                            input: Reduce {
                                                                                f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < hydro_test :: __staged :: __deps :: tokio :: time :: Instant , hydro_test :: __staged :: __deps :: tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | _ , _ | { } }),
                                                                                input: Source {
                                                                                    source: Stream(
                                                                                        { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let interval__free = { use hydro_std :: __staged :: __deps :: * ; use hydro_std :: __staged :: bench_client :: * ; Duration :: from_millis (1000) } ; tokio_stream :: wrappers :: IntervalStream :: new (tokio :: time :: interval (interval__free)) },
                                                                                    ),
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Cluster(
                                                                                            2,
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Tick(
                                                                                        5,
                                                                                        Cluster(
                                                                                            2,
                                                                                        ),
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                    ),
                                                                                },
                                                                            },
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Tick(
                                                                                    5,
                                                                                    Cluster(
                                                                                        2,
                                                                                    ),
                                                                                ),
                                                                                output_type: Some(
                                                                                    (),
                                                                                ),
                                                                            },
                                                                        },
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Tick(
                                                                                5,
                                                                                Cluster(
                                                                                    2,
                                                                                ),
                                                                            ),
                                                                            output_type: Some(
                                                                                (hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , ()),
                                                                            ),
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Tick(
                                                                            5,
                                                                            Cluster(
                                                                                2,
                                                                            ),
                                                                        ),
                                                                        output_type: Some(
                                                                            hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
                                                                        ),
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Process(
                                                                        3,
                                                                    ),
                                                                    output_type: Some(
                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                                    ),
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Process(
                                                                    3,
                                                                ),
                                                                output_type: Some(
                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                                ),
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Process(
                                                                3,
                                                            ),
                                                            output_type: Some(
                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                            ),
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Process(
                                                            3,
                                                        ),
                                                        output_type: Some(
                                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                        ),
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Process(
                                                        3,
                                                    ),
                                                    output_type: Some(
                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                    ),
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Process(
                                                    3,
                                                ),
                                                output_type: Some(
                                                    usize,
                                                ),
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Tick(
                                                4,
                                                Process(
                                                    3,
                                                ),
                                            ),
                                            output_type: Some(
                                                (usize , usize),
                                            ),
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Tick(
                                            4,
                                            Process(
                                                3,
                                            ),
                                        ),
                                        output_type: Some(
                                            usize,
                                        ),
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        4,
                                        Process(
                                            3,
                                        ),
                                    ),
                                    output_type: Some(
                                        usize,
                                    ),
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    4,
                                    Process(
                                        3,
                                    ),
                                ),
                                output_type: Some(
                                    usize,
                                ),
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                4,
                                Process(
                                    3,
                                ),
                            ),
                            output_type: Some(
                                usize,
                            ),
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            4,
                            Process(
                                3,
                            ),
                        ),
                        output_type: Some(
                            (),
                        ),
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        4,
                        Process(
                            3,
                        ),
                    ),
                    output_type: Some(
                        (hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > , ()),
                    ),
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Tick(
                    4,
                    Process(
                        3,
                    ),
                ),
                output_type: Some(
                    hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 >,
                ),
            },
        },
        op_metadata: HydroIrOpMetadata,
    },
]
